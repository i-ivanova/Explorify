{"version":3,"sources":["helpers.js","D3BarChart.js","CalendarHeatmap.js","logo/logo1.png","DropdownSelect.js","App.js","reportWebVitals.js","index.js"],"names":["msToTime","duration","isNaN","Math","floor","seconds","minutes","hours","margin","w","h","updateBar","artistsForDay","top20ArtistsForDay","slice","maxDuration","d3","d","artist_duration","yScale","domain","length","rangeRound","padding","yScaleTicks","xScale","range","yAxis","tickFormat","artist","name","svg","select","style","selectAll","data","transition","attr","i","bandwidth","text","rank","call","D3BarChart","props","top20Artists","topArtistsData","barChart","useRef","useEffect","map","current","rect","enter","append","div","on","event","this","classed","pageX","pageY","html","id","ref","cellSize","toolDate","extractYMD","s","split","parseInt","CalendarHeatmap","streamingData","calendarHeatmap","MIN_MAX","keys","minDate","Date","maxDate","scale","values","full_day_duration","totalWeeks","count","date","getDay","artists","dayLabels","forEach","day","xOffset","m1","m2","months","entry","pair","t0","t1","d0","w0","d1","w1","fullCell","BB","Array","mp","document","getElementById","childNodes","push","getBBox","monthX","boxCentre","width","x","monthLabels","m","yOffset","Option","type","checked","isSelected","onChange","label","DropdownSelect","handleChange","selected","setState","selectedOption","state","value","isMulti","options","genreOptions","component","React","Component","sortAlpha","sortedNames","sort","first","second","inedxMap","Map","set","get","sortByName","sortStream","sortByStream","sortPopularity","popularity","sortByPopularity","App","fullData","require","Object","entries","Navbar","bg","variant","Nav","className","Brand","class","alt","src","logo","height","marginLeft","Toggle","Collapse","Form","Group","controlId","Control","size","Container","fluid","Row","md","Col","Card","Header","Body","Title","InputGroup","min","max","placeholder","Text","background","paddingBottom","Button","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4ed5d73c.chunk.js","sourcesContent":["export function groupBy(rawData, key) {\n    return rawData.reduce(function(previousVal, currentVal) {\n        (previousVal[currentVal[key]] = previousVal[currentVal[key]] || []).push(currentVal);\n        return previousVal;\n    }, {});\n};\n\nexport function msToTime(duration) {\n    if (isNaN(duration))\n        duration = 0;\n    let milliseconds = Math.floor((duration % 1000) / 100),\n        seconds = Math.floor((duration / 1000) % 60),\n        minutes = Math.floor((duration / (1000 * 60)) % 60),\n        hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n    hours = (hours < 10) ? \"0\" + hours : hours;\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n    return hours + \":\" + minutes + \":\" + seconds;\n}\n\nexport function comparator(first, second) {\n    return second[1] - first[1];\n}","import React, {useRef, useEffect, useState} from \"react\";\nimport * as d3 from 'd3';\nimport { groupBy, msToTime, comparator} from \"./helpers\"\n\nconst margin = {\n    top: 20,\n    right: 30,\n    bottom: 10,\n    left: 120\n};\n\nconst w = 530 - margin.left - margin.right;\nconst h = 1000 - margin.top - margin.bottom;\n\nexport function updateEmpty(){\n    d3.select(\"#bar-chart\").select(\"svg\").style(\"display\", \"none\");\n}\n\nexport function updateBar(artistsForDay){\n\n    const top20ArtistsForDay = artistsForDay.slice(0, 20);\n\n    const maxDuration = d3.max(top20ArtistsForDay, d => d.artist_duration)\n\n    let yScale = d3.scaleBand()\n        .domain(d3.range(top20ArtistsForDay.length))\n        .rangeRound([0, h])\n        .padding(0.2);\n\n    let yScaleTicks = d3.scaleBand()\n        .domain(d3.range(top20ArtistsForDay.length))\n        .rangeRound([0, h])\n        .padding(0.05);\n\n    let xScale = d3.scaleLinear()\n        .range([0, w])\n        .domain([0, maxDuration])\n\n    let yAxis = d3.axisLeft(yScaleTicks)\n        .tickFormat(function (d){\n            let artist = top20ArtistsForDay[d].name\n            if (artist.length < 12)\n                return artist\n            else\n                return artist.slice(0, 10) + \"...\"\n        });\n\n    let svg = d3.select(\"#bar-chart\")\n        .select(\"svg\")\n        .style(\"display\", \"flex\");\n\n    svg.selectAll(\".bar\")\n        .data(top20ArtistsForDay)\n        .transition()\n        .duration(2000) // 2 seconds\n        .attr(\"x\", function (d) {\n            return w - xScale(d.artist_duration)\n        })\n        .attr(\"y\", function (d, i) {\n            return yScale(i)\n        })\n        .attr(\"x\", margin.left)\n        .attr(\"height\", yScale.bandwidth())\n        .attr(\"width\", function (d) {\n            return xScale(d.artist_duration);\n        })\n\n    svg.selectAll(\".label\")\n        .data(top20ArtistsForDay)\n        .transition()\n        .duration(2000)\n        .attr(\"x\", function (d) {\n            return xScale(d.artist_duration) + margin.left + 10;\n        })\n        .attr(\"y\", function (d, i){\n            return yScale(i) + margin.top;\n        })\n        .text(function (d, i){\n            if (d.artist_duration != 0){\n                return \"#\" + d.rank\n            }\n        })\n\n    svg.selectAll(\".y-axis\")\n        .transition()\n        .duration(2000)\n        .call(yAxis)\n\n}\n\nexport function sortByName() {\n    const compareFn = (first, second) => {\n        if (first[0].name > second[0].name || first[0].name == \"\") return 1;\n        return -1;\n    }\n\n    const compareFn1 = (first, second) => {\n        if (first.name > second.name || first.name == \"\") return 1;\n        return -1;\n    }\n\n    let svg = d3.select(\"#bar-chart\")\n        .select(\"svg\")\n        .style(\"display\", \"flex\");\n\n    let rect = svg.selectAll(\".bar\")\n\n    let sortedNames = []\n    rect.data().forEach(function (entry, i) {\n        sortedNames.push([entry, i]);\n    })\n\n    sortedNames.sort(compareFn)\n\n    let inedxMap = new Map()\n    sortedNames.forEach(function (entry, i){\n        inedxMap.set(entry[1], i)\n    })\n\n    let yScale = d3.scaleBand()\n        .domain(d3.range(rect.data().length))\n        .rangeRound([0, h])\n        .padding(0.2);\n\n    let yScaleTicks = d3.scaleBand()\n        .domain(d3.range(rect.data().length))\n        .rangeRound([0, h])\n        .padding(0.05);\n\n    let yAxis = d3.axisLeft(yScaleTicks)\n        .tickFormat(function (d, i) {\n            let artist = sortedNames[i][0].name\n            if (artist.length < 12)\n                return artist\n            else\n                return artist.slice(0, 10) + \"...\"\n        });\n\n    rect.transition()\n        .duration(2000)\n        .attr(\"y\", function (d, i) {\n            return yScale(inedxMap.get(i));\n        })\n\n    svg.selectAll(\".label\")\n        .transition()\n        .duration(2000)\n        .attr(\"y\", function (d, i) {\n            return yScale(inedxMap.get(i)) + margin.top;\n        })\n\n    svg.selectAll(\".y-axis\")\n        .transition()\n        .call(yAxis)\n\n    rect.data().sort(compareFn1)\n}\n\nexport function sortByPopularity(){\n    const compareFn = (first, second) => {\n        if (first[0].popularity < second[0].popularity || second[0].popularity == 0) return 1;\n        return -1;\n    }\n\n    const compareFn1 = (first, second) => {\n        if (first.popularity < second.popularity || second.popularity == 0) return 1;\n        return -1;\n    }\n\n    let svg = d3.select(\"#bar-chart\")\n        .select(\"svg\")\n        .style(\"display\", \"flex\");\n\n    let rect = svg.selectAll(\".bar\")\n\n    let sortedNames = []\n    rect.data().forEach(function (entry, i) {\n        sortedNames.push([entry, i]);\n    })\n\n    sortedNames.sort(compareFn)\n\n    let inedxMap = new Map()\n    sortedNames.forEach(function (entry, i){\n        inedxMap.set(entry[1], i)\n    })\n\n    let yScale = d3.scaleBand()\n        .domain(d3.range(rect.data().length))\n        .rangeRound([0, h])\n        .padding(0.2);\n\n    let yScaleTicks = d3.scaleBand()\n        .domain(d3.range(rect.data().length))\n        .rangeRound([0, h])\n        .padding(0.05);\n\n    let yAxis = d3.axisLeft(yScaleTicks)\n        .tickFormat(function (d, i) {\n            let artist = sortedNames[i][0].name\n            if (artist.length < 12)\n                return artist\n            else\n                return artist.slice(0, 10) + \"...\"\n        });\n\n    rect.transition()\n        .duration(2000)\n        .attr(\"y\", function (d, i) {\n            return yScale(inedxMap.get(i));\n        })\n\n    svg.selectAll(\".label\")\n        .transition()\n        .duration(2000)\n        .attr(\"y\", function (d, i) {\n            return yScale(inedxMap.get(i)) + margin.top;\n        })\n\n    svg.selectAll(\".y-axis\")\n        .transition()\n        .call(yAxis)\n\n    rect.data().sort(compareFn1)\n}\n\nexport function sortByStream(){\n    const compareFn = (first, second) => {\n        if (first[0].artist_duration < second[0].artist_duration || second[0].artist_duration == 0) return 1;\n        return -1;\n    }\n\n    const compareFn1 = (first, second) => {\n        if (first.artist_duration < second.artist_duration || second.artist_duration == 0) return 1;\n        return -1;\n    }\n\n    let svg = d3.select(\"#bar-chart\")\n        .select(\"svg\")\n        .style(\"display\", \"flex\");\n\n    let rect = svg.selectAll(\".bar\")\n\n    let sortedNames = []\n    rect.data().forEach(function (entry, i) {\n        sortedNames.push([entry, i]);\n    })\n\n    sortedNames.sort(compareFn)\n\n    let inedxMap = new Map()\n    sortedNames.forEach(function (entry, i){\n        inedxMap.set(entry[1], i)\n    })\n\n    let yScale = d3.scaleBand()\n        .domain(d3.range(rect.data().length))\n        .rangeRound([0, h])\n        .padding(0.2);\n\n    let yScaleTicks = d3.scaleBand()\n        .domain(d3.range(rect.data().length))\n        .rangeRound([0, h])\n        .padding(0.05);\n\n    let yAxis = d3.axisLeft(yScaleTicks)\n        .tickFormat(function (d, i) {\n            let artist = sortedNames[i][0].name\n            if (artist.length < 12)\n                return artist\n            else\n                return artist.slice(0, 10) + \"...\"\n        });\n\n    rect.transition()\n        .duration(2000)\n        .attr(\"y\", function (d, i) {\n            return yScale(inedxMap.get(i));\n        })\n\n    svg.selectAll(\".label\")\n        .transition()\n        .duration(2000)\n        .attr(\"y\", function (d, i) {\n            return yScale(inedxMap.get(i)) + margin.top;\n        })\n\n    svg.selectAll(\".y-axis\")\n        .transition()\n        .call(yAxis)\n\n    rect.data().sort(compareFn1)\n}\n\n\nconst D3BarChart = (props) => {\n    const topArtistsData = props.topArtistsData;\n    const top20Artists = topArtistsData.slice(0, 20);\n\n    // const data = require(\"./data/StreamingHistoryD.json\");\n    const barChart = useRef()\n\n    useEffect(() => {\n        let yScale = d3.scaleBand()\n            .domain(d3.range(top20Artists.length))\n            .rangeRound([0, h])\n            .padding(0.2);\n\n        let yScaleTicks = d3.scaleBand()\n            .domain(top20Artists.map(function (d) { return d.name; }))\n            .rangeRound([0, h])\n            .padding(0.05);\n\n        let xScale = d3.scaleLinear()\n            .range([0, w])\n            .domain([0, top20Artists[0].artist_duration])\n\n        let yAxis = d3.axisLeft(yScaleTicks)\n            .tickFormat(function (d){\n                if (d.length < 12)\n                    return d\n                else\n                    return d.slice(0, 10) + \"...\"\n            });\n\n        let svg = d3.select(barChart.current)\n            .attr(\"width\", w + margin.left + margin.right)\n            .attr(\"height\", h + margin.top + margin.bottom)\n            .style(\"margin\", \"40 0 0 10\")\n\n\n        let rect = svg.selectAll(\"rect\")\n            .data(top20Artists)\n            .enter()\n            .append(\"g\")\n\n        rect.append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", function (d) {\n                return w - xScale(d.artist_duration)\n            })\n            .attr(\"y\", function (d, i) {\n                return yScale(i)\n            })\n            .attr(\"x\", margin.left)\n            .attr(\"height\", yScale.bandwidth())\n            .attr(\"width\", function (d) {\n                return xScale(d.artist_duration);\n            })\n\n        rect.append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"x\", function (d) {\n                return xScale(d.artist_duration) + margin.left + 10;\n            })\n            .attr(\"y\", function (d, i){\n                return yScale(i) + margin.top;\n            })\n            .text(function (d){\n                if (d.artist_duration != 0){\n                    return \"#\" + d.rank\n                }\n            })\n\n        svg.append(\"g\")\n            .attr(\"class\",\"y-axis\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",0)\")//magic number, change it at will\n            .call(yAxis);\n\n\n        let div = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n        let bar = svg.selectAll(\".bar\")\n            .data(top20Artists);\n\n        bar.on(\"mousemove\", function(event, d) {\n            d3.select(this).classed(\"hover\", true);\n            div.style(\"left\", event.pageX+10+\"px\");\n            div.style(\"top\", event.pageY-25+\"px\");\n            div.style(\"display\", \"inline-block\");\n            div.html((d.name)+\"<br>\"+(msToTime(d.artist_duration)));\n        }).on(\"mouseout\", function (d) {\n            d3.select(this).classed(\"hover\", false)\n            div.style(\"display\", \"none\");\n        }).on(\"click\", function(event, d) {\n            if(!d3.select(this).classed(\"selected\")){\n                d3.selectAll(\".bar\").classed(\"selected\", false)\n                d3.select(this).classed(\"selected\", true);\n            } else {\n                d3.select(this).classed(\"selected\", false)\n            }\n        });\n\n    })\n\n    return (\n        <div id=\"bar-chart\">\n            <svg ref={barChart}></svg>\n        </div>\n    )\n}\n\nexport default D3BarChart;","import React, {useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport {comparator, groupBy, msToTime} from \"./helpers\";\nimport { updateBar, updateEmpty } from \"./D3BarChart\";\n\nconst cellSize = 30;\nconst cellMargin = 1;\nconst xOffset= 60;\nconst yOffset= 60;\nconst parseDate = d3.timeFormat(\"%Y-%m-%d\");\nconst format = d3.timeFormat(\"%d-%m-%Y\");\nconst toolDate = d3.timeFormat(\"%d %b %Y\");\n\nconst extractYMD = function (s){\n    s = s.split(\"-\")\n    return [parseInt(s[0]), parseInt(s[1]), parseInt(s[2])]\n}\n\nconst weeksInMonth = function(month){\n    let m = d3.timeMonth.floor(month)\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n}\n\nconst CalendarHeatmap = (props) => {\n    const streamingData = props.streamingData;\n    const topArtistsData = props.topArtistsData;\n    const calendarHeatmap = useRef();\n\n    const MIN_MAX = d3.extent(streamingData.keys())\n    const minDate = new Date(extractYMD(MIN_MAX[0]))\n    const maxDate = new Date(extractYMD(MIN_MAX[1]))\n\n    const dateRange = d3.timeDays(minDate, maxDate)\n\n    useEffect(() => {\n\n        let scale = d3.scaleSequentialSqrt()\n            .domain(d3.extent(streamingData.values(), function(d) {\n                return parseInt(d.full_day_duration); }))\n            .range([0.05, 1]);\n\n        const totalWeeks = d3.timeWeek.count(minDate, maxDate)\n\n        let svg = d3.select(calendarHeatmap.current)\n            .attr(\"width\", ((cellSize + cellMargin) * (totalWeeks + 1) + xOffset))\n            .attr(\"height\", ((cellSize * 7) + (cellMargin * 8) + yOffset))\n            .style(\"display\", \"block\")\n            .style(\"margin\", \"10 15 50 15\")\n\n\n        let rect = svg.append(\"g\")\n            .attr(\"id\", \"all-days\")\n            .selectAll(\".day\")\n            .data(streamingData.values())\n            .enter()\n            .append(\"rect\")\n            .attr(\"id\", function (d){\n                return d.date;\n            })\n            .attr(\"class\", \"day\")\n            .attr(\"width\", cellSize)\n            .attr(\"height\", cellSize)\n            .attr(\"x\", function (d){\n                return xOffset + (d3.timeWeek.count(minDate, new Date(extractYMD(d.date))) * (cellSize + cellMargin));\n            })\n            .attr(\"y\", function (d){\n                return yOffset + (new Date(extractYMD(d.date)).getDay() * (cellSize + cellMargin))\n            })\n            .attr(\"fill\", function (d){\n                return d3.interpolateBlues(scale(d.full_day_duration))\n            })\n\n        let div = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n        rect\n            .on(\"mouseover\", function(event, d) {\n            let date = toolDate(new Date(extractYMD(d.date)))\n            d3.select(this).classed('hover', true);\n            div.style(\"left\", event.pageX+10+\"px\");\n            div.style(\"top\", event.pageY-25+\"px\");\n            div.style(\"display\", \"inline-block\");\n            div.html(`On ${date} listened <br> for ${(msToTime(d.full_day_duration))}`);\n        })\n            .on(\"mouseout\", function(event, d) {\n                d3.select(this).classed('hover', false);\n                div.style(\"display\", \"none\");\n            })\n            .on(\"click\", function(event, d) {\n                d3.select(\"#bar-chart\").selectAll(\".bar\").classed(\"selected\", false);\n                if(!d3.select(this).classed(\"selected\")){\n                    d3.selectAll(\".day\").classed(\"selected\", false)\n                    d3.select(this).classed('hover', true);\n                    d3.select(this).classed(\"selected\", true);\n                    if (d.full_day_duration != 0)\n                        updateBar(d.artists)\n                    else\n                        updateEmpty()\n                } else {\n                    d3.select(this).classed('hover', false);\n                    d3.select(this).classed(\"selected\", false)\n                    updateBar(topArtistsData)\n                }\n            })\n\n        let weekDays = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n        let dayLabels = svg.append(\"g\").attr(\"id\",\"dayLabels\");\n\n        weekDays.forEach(function (day, i){\n            dayLabels.append(\"text\")\n                .attr(\"class\", \"day-label\")\n                .attr(\"x\", xOffset - (cellSize * 2))\n                .attr(\"y\", function (day){return yOffset + (i * (cellSize + cellMargin))})\n                .attr(\"dy\", \"0.93em\")\n                .text(day)\n        })\n\n        function monthPath(pair) {\n          let   t0 = pair[0],\n                t1 = pair[1],\n                d0 = t0.getDay(),\n                w0 = d3.timeWeek.count(minDate, t0),\n                d1 = t1.getDay(),\n                w1 = d3.timeWeek.count(minDate, t1),\n                fullCell = cellSize + cellMargin;\n\n            return \"M \" + (w0 + 1) * fullCell + \", \" + d0 * fullCell\n                + \" H \" + w0 * fullCell + \" V \" + 7 * fullCell\n                + \" H \" + w1 * fullCell + \" V \" + d1  * fullCell\n                + \" H \" + (w1 + 1) * fullCell + \" V \" + 0\n                + \" H \" + (w0 + 1) * fullCell + \" Z \";\n        }\n\n\n        const m1 = [minDate, ...d3.timeMonths(minDate, maxDate)]\n        const m2 = [...d3.timeMonths(minDate, maxDate), maxDate]\n        const months = m1.map(function (entry, i){\n            return [entry, m2[i]]\n        })\n\n\n\n        svg.append(\"g\")\n            .attr(\"id\", \"month-outline\")\n            .selectAll(\".month\")\n            .data(months)\n            .enter()\n            .append(\"path\")\n            .attr(\"class\", \"month\")\n            .attr(\"transform\", `translate(${xOffset}, ${yOffset})`)\n            .attr(\"d\", monthPath)\n\n\n        let BB = new Array();\n        let mp = document.getElementById(\"month-outline\").childNodes;\n        for (let i=0; i<mp.length; i++){\n            BB.push(mp[i].getBBox());\n        }\n\n        let monthX = new Array();\n        BB.forEach(function(d, i){\n            let boxCentre = d.width/2;\n            monthX.push(d.x + boxCentre + xOffset);\n        })\n\n        let monthLabels = svg.append(\"g\").attr(\"id\",\"month-label\")\n        const allMonths = [minDate, ...d3.timeMonths(minDate, maxDate)]\n        allMonths.forEach(function(m,i)    {\n            monthLabels.append(\"text\")\n                .attr(\"class\",\"month-label\")\n                .attr(\"x\",monthX[i])\n                .attr(\"y\",yOffset/1.2)\n                .text(d3.timeFormat(\"%b\")(m));\n        })\n    })\n\n\n    return(\n        <div id=\"calendar-heatmap\">\n            <svg ref={calendarHeatmap}></svg>\n        </div>\n    )\n\n}\n\nexport default CalendarHeatmap;","export default __webpack_public_path__ + \"static/media/logo1.989871fe.png\";","import React from 'react';\nimport { default as ReactSelect } from \"react-select\";\nimport { components } from 'react-select';\n\nconst Option = (props) => {\n    return (\n        <div>\n            <components.Option {...props}>\n                <input\n                    type=\"checkbox\"\n                    checked={props.isSelected}\n                    onChange={() => null}\n                />{\" \"}\n                <label>{props.label}</label>\n            </components.Option>\n        </div>\n    );\n};\n\nexport class DropdownSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedOption: null,\n        };\n    }\n    handleChange = (selected) => {\n        this.setState({\n            selectedOption: selected\n        });\n    };\n    render() {\n        const { selectedOption } = this.state;\n        return (\n            <span\n                // class=\"d-inline-block\"\n                data-toggle=\"popover\"\n                data-trigger=\"focus\"\n                data-content=\"Please selecet genre(s)\"\n            >\n                <ReactSelect\n                    value={selectedOption}\n                    isMulti\n                    onChange={this.handleChange}\n                    options={genreOptions}\n                    component = {{Option}}\n                    onChange={this.handleChange}\n                    allowSelectAll={true}\n                    value={this.state.selectedOption}\n                />\n\n            </span>\n        )\n    }\n}\n\nconst genreOptions = [\n    { value: \"Rock\", label: \"Rock\" },\n    { value: \"Pop Music\", label: \"Pop Music\" },\n    { value: \"Hip-Hop\", label: \"Hip-Hop\" },\n    { value: \"Jazz\", label: \"Jazz\" },\n    { value: \"Blues\", label: \"Blues\" },\n    { value: \"Country Music\", label: \"Country Music\" },\n    { value: \"Punk Rock\", label: \"Punk Rock\" },\n];","import './App.css';\nimport  D3BarChart, { sortByName, sortByStream, sortByPopularity } from \"./D3BarChart\";\nimport CalendarHeatmap from \"./CalendarHeatmap\";\nimport logo from \"./logo/logo1.png\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useRef } from \"react\";\nimport { DropdownSelect } from \"./DropdownSelect\"\nimport { Navbar, Container, Form, Nav, Row, Col, Card, InputGroup, ButtonGroup, Button } from \"react-bootstrap\";\nimport { BsQuestionCircle } from 'react-icons/bs';\n\nconst options = [\n    { value: 'listening-history', label: 'Listening History' },\n    { value: 'popularity', label: 'Popularity' },\n    { value: 'alphabetical', label: 'Alphabetical' },\n];\n\nconst sortAlpha = () => sortByName();\nconst sortStream = () => sortByStream();\nconst sortPopularity = () => sortByPopularity();\n\nfunction App() {\n    let selectedOption = useRef(options[0]);\n\n    const handleChange = (selected) => {\n        selectedOption = selected;\n    };\n\n    let fullData = require(\"./data/Jonatan_data/processed_filtered_dataset.json\");\n\n    const topArtistsData = require(\"./data/Jonatan_data/top_artists.json\");\n    const streamingData = new Map(Object.entries(fullData));\n\n    return (\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Nav className=\"container-fluid\">\n                    <Navbar.Brand class>\n                        <img alt=\"\" src={logo}\n                             width=\"100%\"\n                             height=\"70\"\n                             className=\"d-inline-block align-top\"\n                             style={{marginLeft: \"40px\"}}\n                        />\n                    </Navbar.Brand>\n                    <Navbar.Toggle />\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Form.Group controlId=\"formFileSm\" className=\"ms-auto\">\n                            <Form.Control type=\"file\" size=\"sm\" />\n                        </Form.Group>\n                    </Navbar.Collapse>\n                </Nav>\n            </Navbar>\n\n            <Container fluid className=\"custom-container\">\n                <Row md={12} className={\"row-col-pad\"}>\n                    <Col md={9} s={6}>\n                            <Row md={9} className={\"row-col-pad\"}>\n                                <Card className={\"display-card\"}>\n                                    <Row md={9}>\n                                        <Col md={2}>\n                                            <Card className={\"filter-panel\"}>\n                                                <Card.Header>\n                                                    <h5>\n                                                        <a> Filter Panel</a>\n                                                        <BsQuestionCircle/>\n                                                    </h5>\n                                                </Card.Header>\n                                                <Card className={\"filter-panel\"} style={{height: \"50%\"}}>\n                                                    <Card.Body>\n                                                        <Card.Title> Genre </Card.Title>\n                                                        <DropdownSelect/>\n                                                    </Card.Body>\n                                                </Card>\n                                                <Card className={\"filter-panel\"} style={{height: \"15%\"}}>\n                                                    <Card.Body>\n                                                        <Card.Title> Popularity </Card.Title>\n                                                        <InputGroup>\n                                                            <Form.Control style={{width: \"40%\"}} type=\"number\" min=\"0\" max=\"100\" placeholder=\"min\" />\n                                                            <InputGroup.Text >-</InputGroup.Text>\n                                                            <Form.Control style={{width: \"40%\"}} type=\"number\" min=\"0\" max=\"100\" placeholder=\"max\" />\n                                                        </InputGroup>\n                                                    </Card.Body>\n                                                </Card>\n                                                <Card className={\"filter-panel\"} style={{height: \"35%\"}}>\n                                                    <Card.Body>\n                                                        <Card.Title> Legend </Card.Title>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Card>\n                                        </Col>\n                                        <Col md={10}>\n                                            <Card style={{background: \"#f8f8f8\"}}>\n                                                <Card.Header>\n                                                    <h5>\n                                                        <a>Artist-Genre Network</a>\n                                                        <BsQuestionCircle/>\n                                                    </h5>\n                                                </Card.Header>\n                                                <div id=\"edge-map\" style={{\"width\": \"75%\", \"height\" : \"820px\"}}></div>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                </Card>\n                            </Row>\n                            <Row className={\"row-col-pad\"}>\n                                <Card className={\"display-card\"}>\n                                    <Card.Header className={\"card-header-dark headingOne\"}>\n                                        <h4>\n                                            Daily Listening Pattern\n                                            <BsQuestionCircle/>\n                                        </h4>\n                                    </Card.Header>\n                                    <CalendarHeatmap\n                                        streamingData = { streamingData }\n                                        topArtistsData = { topArtistsData }\n                                    />\n                                </Card>\n                            </Row>\n                    </Col>\n                    <Col md={3} s={6} className={\"row-col-pad\"}>\n                        <Card className={\"display-card\"}>\n                            <Card.Header className={\"card-header-dark\"}>\n                                <h4>\n                                    Top 20 Artists\n                                    <BsQuestionCircle/>\n                                </h4>\n                            </Card.Header>\n                            <br/>\n                            <Card.Header className={\"card-header-dark\"}>\n                                <h5 style={{paddingBottom: \"10px\"}}>Sorting Criteria</h5>\n                                <div className={\"button-span\"}>\n                                    <Button variant=\"info\" style={{width: \"30%\"}} onClick={sortStream}>\n                                        Streaming Time\n                                    </Button>\n                                    {' '}\n                                    <Button variant=\"info\" style={{width: \"30%\"}} onClick={sortPopularity}>\n                                        Artist Popularity\n                                    </Button>\n                                    {' '}\n                                    <Button variant=\"info\" style={{width: \"30%\"}} onClick={sortAlpha}>\n                                        Alphabetic\n                                    </Button>\n                                </div>\n                            </Card.Header>\n                            <br/>\n                            <D3BarChart\n                                topArtistsData = { topArtistsData }\n                            />\n                        </Card>\n                    </Col>\n                </Row>\n\n                <Row md={12} className={\"row-pad\"}>\n                    <Card className={\"display-card headingOne\"}>\n                        <Card.Header className={\"card-header-dark\"}>\n                            <h4>\n                               Track Features Distribution\n                                <BsQuestionCircle/>\n                            </h4>\n                        </Card.Header>\n                        <div id=\"distribution-map\" style={{\"width\": \"100%\", \"height\" : \"500px\"}}></div>\n                    </Card>\n                </Row>\n\n            </Container>\n        </>\n\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}