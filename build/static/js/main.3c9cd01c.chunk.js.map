{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","rawData","require","map","elem","entry","date","endTime","split","msPlayed","filteredData","Object","values","key","reduce","previousVal","currentVal","push","groupBy","streamingData","day","prev","cur","className","console","log","data","color","overview","handler","val","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0qilBAyDeA,MA9Cf,WACI,IAOMC,EADOC,EAAQ,IACAC,KAAI,SAAUC,GAC/B,IAAIC,EAAQ,GAGZ,OAFAA,EAAMC,KAAOF,EAAKG,QAAQC,MAAM,KAAK,GACrCH,EAAMI,SAAWL,EAAKK,SACfJ,KAGPK,EAAeC,OAAOC,OAtB9B,SAAiBX,EAASY,GACtB,OAAOZ,EAAQa,QAAO,SAASC,EAAaC,GAExC,OADCD,EAAYC,EAAWH,IAAQE,EAAYC,EAAWH,KAAS,IAAII,KAAKD,GAClED,IACR,IAkB8BG,CAAQjB,EAAS,SAE5CkB,EAAgBT,EAAaP,KAAI,SAAUiB,GAC7C,IAAId,EAAOc,EAAI,GAAJ,KAOX,OANAA,EAAMA,EAAIN,QAAO,SAAUO,EAAMC,GAG7B,OAFAD,EAAI,YAAkBA,EAAI,YAAkB,EAC5CA,EAAI,MAAYA,EAAI,MAAYC,EAAG,SAC5BD,IACR,CAAC,YAAe,EAAG,MAAS,EAAG,QAAW,GAAI,QAAW,CAAC,CAAC,KAAQ,YAClEf,KAAOA,EACJc,KAKX,OACA,qBAAKG,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACSC,QAAQC,IAAIN,GAEjB,cAAC,IAAD,CACEO,KAAMP,EACNQ,MApCE,UAqCFC,SApCO,OAqCPC,QApCM,SAAUC,aCFfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c9cd01c.chunk.js","sourcesContent":["import './App.css';\nimport CalendarHeatmap  from \"reactjs-calendar-heatmap\";\nimport React from \"react\";\n\nfunction groupBy(rawData, key) {\n    return rawData.reduce(function(previousVal, currentVal) {\n        (previousVal[currentVal[key]] = previousVal[currentVal[key]] || []).push(currentVal);\n        return previousVal;\n    }, {});\n};\n\nfunction App() {\n    const red = \"#8a0d0d\";\n    const overview = \"year\";\n    const printFn = function (val) {\n        // console.log(val);\n    };\n\n    const data = require(\"./data/StreamingHistoryDesi.json\");\n    const rawData = data.map(function (elem) {\n        let entry = {}\n        entry.date = elem.endTime.split(\" \")[0];\n        entry.msPlayed = elem.msPlayed;\n        return entry;\n    });\n\n    let filteredData = Object.values(groupBy(rawData, \"date\"));\n\n    const streamingData = filteredData.map(function (day) {\n        let date = day[0][\"date\"];\n        day = day.reduce(function (prev, cur) {\n            prev[\"totalTracks\"] = prev[\"totalTracks\"] + 1;\n            prev[\"total\"] = prev[\"total\"] + cur[\"msPlayed\"];\n            return prev;\n        }, {\"totalTracks\": 0, \"total\": 0, \"details\": [], \"summary\": [{\"name\": \"test\"}]});\n        day.date = date;\n        return day;\n    });\n    // console.log(streamingData)\n\n\n    return (\n    <div className=\"App\">\n        <header className=\"App-header\" >\n            {    console.log(streamingData)\n            }\n            <CalendarHeatmap\n              data={streamingData}\n              color={red}\n              overview={overview}\n              handler={printFn}>\n          </CalendarHeatmap>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}