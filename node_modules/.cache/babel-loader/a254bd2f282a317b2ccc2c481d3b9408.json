{"ast":null,"code":"var _jsxFileName = \"/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/ReactCalendarHeatmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport CalendarHeatmap from \"./calendar-heatmap/index\";\nimport ReactTooltip from \"react-tooltip\";\nimport 'react-calendar-heatmap/dist/styles.css';\nimport * as d3 from 'd3';\nimport { groupBy, msToTime, comparator } from \"./helpers\";\nimport data from \"./data/StreamingHistoryD.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReactCalendarHeatmap = () => {\n  _s();\n\n  const data = require(\"./data/StreamingHistoryD.json\");\n\n  const barChart = useRef();\n  const rawData = data.map(function (elem) {\n    let entry = {};\n    entry.date = elem.endTime.split(\" \")[0];\n    entry.msPlayed = elem.msPlayed;\n    entry.artistName = elem.artistName;\n    return entry;\n  });\n  let filteredData = Object.values(groupBy(rawData, \"date\"));\n  let streamingData = filteredData.map(function (day) {\n    let date = day[0][\"date\"];\n    day = day.reduce(function (prev, cur) {\n      prev.count = prev.count + cur.msPlayed;\n      prev.artists[cur.artistName] = (prev.artists[cur.artistName] || 0) + cur.msPlayed;\n      return prev;\n    }, {\n      \"count\": 0,\n      \"artists\": {}\n    });\n    day.date = date;\n    return day;\n  });\n  streamingData = streamingData.map(function (entry) {\n    let artists = Object.keys(entry.artists).map(function (artist) {\n      return [artist, entry.artists[artist]];\n    });\n    entry.artists = artists.sort(comparator).concat(Array(19).fill([\" \", 0])).slice(0, 20);\n    return entry;\n  });\n  let allArtists = rawData.reduce(function (prev, cur) {\n    prev[cur.artistName] = (prev[cur.artistName] || 0) + cur.msPlayed;\n    return prev;\n  }, {});\n  allArtists = Object.keys(allArtists).map(function (artist) {\n    return [artist, allArtists[artist]];\n  });\n  const top20Artists = allArtists.sort(comparator).slice(0, 20);\n  const [datasetOnClick, changeDataset] = useState(top20Artists);\n  const startDate = streamingData[1].date;\n  const endDate = streamingData[streamingData.length - 1].date;\n  const allDates = d3.timeDays(new Date(startDate), new Date(endDate)).map(function (d) {\n    return d.toISOString().split(\"T\")[0];\n  });\n  let lookup = new Map(streamingData.map(function (entry) {\n    return [entry.date, [entry.count, entry.artists]];\n  })); //\n  // allDates.forEach(function (entry){\n  //     if (!lookup.has(entry)){\n  //         lookup.set(entry, [0, []])\n  //     }\n  // })\n\n  console.log(lookup);\n  const minMax = d3.extent(streamingData, function (d) {\n    return d.count;\n  });\n  const binSize = Math.floor((minMax[1] - minMax[0]) / 7);\n  streamingData = streamingData.map(function (entry) {\n    entry.color = Math.floor(entry.count / binSize) + 1;\n    entry.listeningHours = msToTime(entry.count);\n    return entry;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CalendarHeatmap, {\n      values: streamingData,\n      classForValue: value => {\n        if (!value) {\n          return \"color-empty\";\n        }\n\n        return `color-scale-${value.color}`;\n      },\n      onClick: value => {\n        if (value) {\n          console.log(`Clicked on value with count: ${value.count}, ${value.color}`);\n        }\n      },\n      startDate: startDate,\n      endDate: endDate,\n      showWeekdayLabels: true,\n      tooltipDataAttrs: value => {\n        return {\n          'data-tip': `Listened for ${msToTime(value.count)} on ${value.date}`\n        };\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ReactCalendarHeatmap, \"rrVS5+CT5Fq6s+PSOxRfA95jm0s=\");\n\n_c = ReactCalendarHeatmap;\nexport default ReactCalendarHeatmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactCalendarHeatmap\");","map":{"version":3,"sources":["/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/ReactCalendarHeatmap.js"],"names":["React","useRef","useState","CalendarHeatmap","ReactTooltip","d3","groupBy","msToTime","comparator","data","ReactCalendarHeatmap","require","barChart","rawData","map","elem","entry","date","endTime","split","msPlayed","artistName","filteredData","Object","values","streamingData","day","reduce","prev","cur","count","artists","keys","artist","sort","concat","Array","fill","slice","allArtists","top20Artists","datasetOnClick","changeDataset","startDate","endDate","length","allDates","timeDays","Date","d","toISOString","lookup","Map","console","log","minMax","extent","binSize","Math","floor","color","listeningHours","value"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from \"react\";\nimport CalendarHeatmap from \"./calendar-heatmap/index\";\nimport ReactTooltip from \"react-tooltip\";\nimport 'react-calendar-heatmap/dist/styles.css';\nimport * as d3 from 'd3';\nimport { groupBy, msToTime, comparator} from \"./helpers\"\nimport data from \"./data/StreamingHistoryD.json\";\n\n\nconst ReactCalendarHeatmap = () => {\n    const data = require(\"./data/StreamingHistoryD.json\");\n    const barChart = useRef()\n    const rawData = data.map(function (elem) {\n        let entry = {}\n        entry.date = elem.endTime.split(\" \")[0];\n        entry.msPlayed = elem.msPlayed;\n        entry.artistName = elem.artistName;\n        return entry;\n    });\n\n\n    let filteredData = Object.values(groupBy(rawData, \"date\"));\n\n    let streamingData = filteredData.map(function (day) {\n        let date = day[0][\"date\"];\n        day = day.reduce(function (prev, cur) {\n            prev.count = prev.count + cur.msPlayed;\n            prev.artists[cur.artistName] = (prev.artists[cur.artistName] || 0) + cur.msPlayed;\n            return prev;\n        }, {\"count\": 0, \"artists\": {}});\n        day.date = date;\n        return day;\n    });\n\n    streamingData = streamingData.map(function (entry) {\n        let artists = Object.keys(entry.artists).map(function (artist) {\n            return [artist, entry.artists[artist]];\n        });\n        entry.artists = (artists.sort(comparator).concat(Array(19).fill([\" \", 0]))).slice(0, 20)\n        return entry\n    })\n\n    let allArtists = rawData.reduce(function (prev, cur) {\n        prev[cur.artistName] = (prev[cur.artistName] || 0) + cur.msPlayed;\n        return prev;\n    }, {})\n\n    allArtists = Object.keys(allArtists).map(function (artist) {\n        return [artist, allArtists[artist]];\n    });\n\n    const top20Artists = allArtists.sort(comparator).slice(0, 20)\n    const [datasetOnClick, changeDataset] = useState(top20Artists)\n\n    const startDate = streamingData[1].date;\n    const endDate = streamingData[streamingData.length - 1].date;\n\n\n    const allDates = d3.timeDays(new Date(startDate), new Date(endDate)).map(function (d){\n        return d.toISOString().split(\"T\")[0]\n    })\n\n    let lookup = new Map(streamingData.map(function (entry){\n            return [entry.date, [entry.count, entry.artists]]\n        })\n    );\n    //\n    // allDates.forEach(function (entry){\n    //     if (!lookup.has(entry)){\n    //         lookup.set(entry, [0, []])\n    //     }\n    // })\n\n    console.log(lookup)\n\n    const minMax = d3.extent(streamingData, function(d) { return d.count})\n    const binSize = Math.floor((minMax[1] - minMax[0]) / 7)\n    streamingData = streamingData.map(function (entry){\n        entry.color = Math.floor(entry.count / binSize) + 1\n        entry.listeningHours = msToTime(entry.count)\n        return entry;\n    })\n\n    return(\n        <>\n            <CalendarHeatmap\n                values={streamingData}\n                classForValue={(value) => {\n                    if (!value) {\n                        return \"color-empty\";\n                    }\n                    return `color-scale-${value.color}`;\n                }}\n                onClick={(value) => {\n                    if (value) {\n                        console.log(`Clicked on value with count: ${value.count}, ${value.color}`)\n                    }\n                }}\n                startDate={startDate}\n                endDate={endDate}\n                showWeekdayLabels={true}\n                tooltipDataAttrs={value => {\n                    return {\n                        'data-tip': `Listened for ${msToTime(value.count)} on ${value.date}`,\n                    };\n                }}\n            />\n            <ReactTooltip></ReactTooltip>\n        </>\n\n\n    )\n\n}\nexport default ReactCalendarHeatmap;"]},"metadata":{},"sourceType":"module"}