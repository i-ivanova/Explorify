{"ast":null,"code":"var _jsxFileName = \"/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/BarChart.js\";\nimport React from \"react\";\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction groupBy(rawData, key) {\n  return rawData.reduce(function (previousVal, currentVal) {\n    (previousVal[currentVal[key]] = previousVal[currentVal[key]] || []).push(currentVal);\n    return previousVal;\n  }, {});\n}\n\n;\n\nconst comparator = function (first, second) {\n  return second[1] - first[1];\n};\n\nconst BarChart = () => {\n  const data = require(\"./data/StreamingHistoryJ.json\");\n\n  const rawData = data.map(function (elem) {\n    let entry = {};\n    entry.date = elem.endTime.split(\" \")[0];\n    entry.msPlayed = elem.msPlayed;\n    entry.artistName = elem.artistName;\n    return entry;\n  });\n  let filteredData = Object.values(groupBy(rawData, \"date\"));\n  let streamingData = filteredData.map(function (day) {\n    let date = day[0][\"date\"];\n    day = day.reduce(function (prev, cur) {\n      prev.msPlayed = prev.msPlayed + cur.msPlayed;\n      prev.artists[cur.artistName] = (prev.artists[cur.artistName] || 0) + cur.msPlayed;\n      return prev;\n    }, {\n      \"msPlayed\": 0,\n      \"artists\": {}\n    });\n    day.date = date;\n    return day;\n  });\n  streamingData = streamingData.map(function (entry) {\n    let artists = Object.keys(entry.artists).map(function (artist) {\n      return [artist, entry.artists[artist]];\n    });\n    entry.artists = artists.sort(comparator).slice(0, 20);\n    return entry;\n  });\n  let allArtists = rawData.reduce(function (prev, cur) {\n    prev[cur.artistName] = (prev[cur.artistName] || 0) + cur.msPlayed;\n    return prev;\n  }, {});\n  allArtists = Object.keys(allArtists).map(function (artist) {\n    return [artist, allArtists[artist]];\n  });\n  const top20Artists = allArtists.sort(comparator).slice(0, 20);\n  const w = 250;\n  const h = 600;\n  let svg = d3.select(\"bar-chart\").append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n  svg.selectAll(\"rect\").append(\"rect\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart\",\n    id: \"bar-chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/BarChart.js"],"names":["React","d3","groupBy","rawData","key","reduce","previousVal","currentVal","push","comparator","first","second","BarChart","data","require","map","elem","entry","date","endTime","split","msPlayed","artistName","filteredData","Object","values","streamingData","day","prev","cur","artists","keys","artist","sort","slice","allArtists","top20Artists","w","h","svg","select","append","attr","selectAll"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as d3 from 'd3';\n\nfunction groupBy(rawData, key) {\n    return rawData.reduce(function(previousVal, currentVal) {\n        (previousVal[currentVal[key]] = previousVal[currentVal[key]] || []).push(currentVal);\n        return previousVal;\n    }, {});\n};\n\nconst comparator = function(first, second) {\n    return second[1] - first[1];\n}\n\nconst BarChart = () => {\n    const data = require(\"./data/StreamingHistoryJ.json\");\n    const rawData = data.map(function (elem) {\n        let entry = {}\n        entry.date = elem.endTime.split(\" \")[0];\n        entry.msPlayed = elem.msPlayed;\n        entry.artistName = elem.artistName;\n        return entry;\n    });\n\n\n    let filteredData = Object.values(groupBy(rawData, \"date\"));\n\n    let streamingData = filteredData.map(function (day) {\n        let date = day[0][\"date\"];\n        day = day.reduce(function (prev, cur) {\n            prev.msPlayed = prev.msPlayed + cur.msPlayed;\n            prev.artists[cur.artistName] = (prev.artists[cur.artistName] || 0) + cur.msPlayed;\n            return prev;\n        }, {\"msPlayed\": 0, \"artists\": {}});\n        day.date = date;\n        return day;\n    });\n\n    streamingData = streamingData.map(function (entry){\n        let artists = Object.keys(entry.artists).map(function(artist) {\n            return [artist, entry.artists[artist]];\n        });\n        entry.artists = artists.sort(comparator).slice(0, 20)\n        return entry\n    })\n\n\n    let allArtists = rawData.reduce(function (prev, cur){\n        prev[cur.artistName] = (prev[cur.artistName] || 0) + cur.msPlayed;\n        return prev;\n    }, {})\n\n    allArtists = Object.keys(allArtists).map(function(artist) {\n        return [artist, allArtists[artist]];\n    });\n\n    const top20Artists = allArtists.sort(comparator).slice(0, 20)\n\n    const w = 250;\n    const h = 600;\n\n    let svg = d3.select(\"bar-chart\")\n                .append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h);\n\n    svg.selectAll(\"rect\").append(\"rect\")\n\n    return (\n        <div className=\"bar-chart\" id=\"bar-chart\">\n\n        </div>\n    );\n}\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}