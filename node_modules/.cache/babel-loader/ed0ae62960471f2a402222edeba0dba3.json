{"ast":null,"code":"var _jsxFileName = \"/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/ReactCalendarHeatmap.js\";\nimport React from \"react\";\nimport CalendarHeatmap from \"./calendar-heatmap/index\";\nimport ReactTooltip from \"react-tooltip\";\nimport 'react-calendar-heatmap/dist/styles.css';\nimport * as d3 from 'd3';\nimport { groupBy, msToTime, comparator } from \"./helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReactCalendarHeatmap = () => {\n  const data = require(\"./data/StreamingHistoryJ.json\");\n\n  const rawData = data.map(function (elem) {\n    let entry = {};\n    entry.date = elem.endTime.split(\" \")[0];\n    entry.msPlayed = elem.msPlayed;\n    return entry;\n  });\n  let filteredData = Object.values(groupBy(rawData, \"date\"));\n  let streamingData = filteredData.map(function (day) {\n    let date = day[0][\"date\"];\n    day = day.reduce(function (prev, cur) {\n      prev[\"totalTracks\"] = prev[\"totalTracks\"] + 1;\n      prev[\"count\"] = prev[\"count\"] + cur[\"msPlayed\"];\n      return prev;\n    }, {\n      \"totalTracks\": 0,\n      \"count\": 0\n    });\n    day.date = date;\n    return day;\n  });\n  const startDate = streamingData[1].date;\n  const endDate = streamingData[streamingData.length - 1].date;\n  const minMax = d3.extent(streamingData, function (d) {\n    return d.count;\n  });\n  const binSize = Math.floor((minMax[1] - minMax[0]) / 7);\n  streamingData = streamingData.map(function (entry) {\n    entry.color = Math.floor(entry.count / binSize) + 1;\n    entry.listeningHours = msToTime(entry.count);\n    return entry;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CalendarHeatmap, {\n      values: streamingData,\n      classForValue: value => {\n        if (!value) {\n          return \"color-empty\";\n        }\n\n        return `color-scale-${value.color}`;\n      },\n      onClick: value => {\n        if (value) {\n          console.log(`Clicked on value with count: ${value.count}, ${value.color}`);\n        }\n      },\n      startDate: startDate,\n      endDate: endDate,\n      showWeekdayLabels: true,\n      tooltipDataAttrs: value => {\n        return {\n          'data-tip': `Listened for ${msToTime(value.count)} on ${value.date}`\n        };\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ReactCalendarHeatmap;\nexport default ReactCalendarHeatmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactCalendarHeatmap\");","map":{"version":3,"sources":["/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/ReactCalendarHeatmap.js"],"names":["React","CalendarHeatmap","ReactTooltip","d3","groupBy","msToTime","comparator","ReactCalendarHeatmap","data","require","rawData","map","elem","entry","date","endTime","split","msPlayed","filteredData","Object","values","streamingData","day","reduce","prev","cur","startDate","endDate","length","minMax","extent","d","count","binSize","Math","floor","color","listeningHours","value","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAO,wCAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,UAA5B,QAA6C,WAA7C;;;;AAGA,MAAMC,oBAAoB,GAAG,MAAM;AAC/B,QAAMC,IAAI,GAAGC,OAAO,CAAC,+BAAD,CAApB;;AACA,QAAMC,OAAO,GAAGF,IAAI,CAACG,GAAL,CAAS,UAAUC,IAAV,EAAgB;AACrC,QAAIC,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,CAACC,IAAN,GAAaF,IAAI,CAACG,OAAL,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAb;AACAH,IAAAA,KAAK,CAACI,QAAN,GAAiBL,IAAI,CAACK,QAAtB;AACA,WAAOJ,KAAP;AACH,GALe,CAAhB;AAQA,MAAIK,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAchB,OAAO,CAACM,OAAD,EAAU,MAAV,CAArB,CAAnB;AAEA,MAAIW,aAAa,GAAGH,YAAY,CAACP,GAAb,CAAiB,UAAUW,GAAV,EAAe;AAChD,QAAIR,IAAI,GAAGQ,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,CAAX;AACAA,IAAAA,GAAG,GAAGA,GAAG,CAACC,MAAJ,CAAW,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AAClCD,MAAAA,IAAI,CAAC,aAAD,CAAJ,GAAsBA,IAAI,CAAC,aAAD,CAAJ,GAAsB,CAA5C;AACAA,MAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgBA,IAAI,CAAC,OAAD,CAAJ,GAAgBC,GAAG,CAAC,UAAD,CAAnC;AACA,aAAOD,IAAP;AACH,KAJK,EAIH;AAAC,qBAAe,CAAhB;AAAmB,eAAS;AAA5B,KAJG,CAAN;AAKAF,IAAAA,GAAG,CAACR,IAAJ,GAAWA,IAAX;AACA,WAAOQ,GAAP;AACH,GATmB,CAApB;AAUA,QAAMI,SAAS,GAAGL,aAAa,CAAC,CAAD,CAAb,CAAiBP,IAAnC;AACA,QAAMa,OAAO,GAAGN,aAAa,CAACA,aAAa,CAACO,MAAd,GAAuB,CAAxB,CAAb,CAAwCd,IAAxD;AAEA,QAAMe,MAAM,GAAG1B,EAAE,CAAC2B,MAAH,CAAUT,aAAV,EAAyB,UAASU,CAAT,EAAY;AAAE,WAAOA,CAAC,CAACC,KAAT;AAAe,GAAtD,CAAf;AACA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACN,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAnB,IAA0B,CAArC,CAAhB;AACAR,EAAAA,aAAa,GAAGA,aAAa,CAACV,GAAd,CAAkB,UAAUE,KAAV,EAAgB;AAC9CA,IAAAA,KAAK,CAACuB,KAAN,GAAcF,IAAI,CAACC,KAAL,CAAWtB,KAAK,CAACmB,KAAN,GAAcC,OAAzB,IAAoC,CAAlD;AACApB,IAAAA,KAAK,CAACwB,cAAN,GAAuBhC,QAAQ,CAACQ,KAAK,CAACmB,KAAP,CAA/B;AACA,WAAOnB,KAAP;AACH,GAJe,CAAhB;AAMA,sBACI;AAAA,4BACI,QAAC,eAAD;AACI,MAAA,MAAM,EAAEQ,aADZ;AAEI,MAAA,aAAa,EAAGiB,KAAD,IAAW;AACtB,YAAI,CAACA,KAAL,EAAY;AACR,iBAAO,aAAP;AACH;;AACD,eAAQ,eAAcA,KAAK,CAACF,KAAM,EAAlC;AACH,OAPL;AAQI,MAAA,OAAO,EAAGE,KAAD,IAAW;AAChB,YAAIA,KAAJ,EAAW;AACPC,UAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+BF,KAAK,CAACN,KAAM,KAAIM,KAAK,CAACF,KAAM,EAAxE;AACH;AACJ,OAZL;AAaI,MAAA,SAAS,EAAEV,SAbf;AAcI,MAAA,OAAO,EAAEC,OAdb;AAeI,MAAA,iBAAiB,EAAE,IAfvB;AAgBI,MAAA,gBAAgB,EAAEW,KAAK,IAAI;AACvB,eAAO;AACH,sBAAa,gBAAejC,QAAQ,CAACiC,KAAK,CAACN,KAAP,CAAc,OAAMM,KAAK,CAACxB,IAAK;AADhE,SAAP;AAGH;AApBL;AAAA;AAAA;AAAA;AAAA,YADJ,eAuBI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA,kBADJ;AA8BH,CA/DD;;KAAMP,oB;AAgEN,eAAeA,oBAAf","sourcesContent":["import React from \"react\";\nimport CalendarHeatmap from \"./calendar-heatmap/index\";\nimport ReactTooltip from \"react-tooltip\";\nimport 'react-calendar-heatmap/dist/styles.css';\nimport * as d3 from 'd3';\nimport { groupBy, msToTime, comparator} from \"./helpers\"\n\n\nconst ReactCalendarHeatmap = () => {\n    const data = require(\"./data/StreamingHistoryJ.json\");\n    const rawData = data.map(function (elem) {\n        let entry = {}\n        entry.date = elem.endTime.split(\" \")[0];\n        entry.msPlayed = elem.msPlayed;\n        return entry;\n    });\n\n\n    let filteredData = Object.values(groupBy(rawData, \"date\"));\n\n    let streamingData = filteredData.map(function (day) {\n        let date = day[0][\"date\"];\n        day = day.reduce(function (prev, cur) {\n            prev[\"totalTracks\"] = prev[\"totalTracks\"] + 1;\n            prev[\"count\"] = prev[\"count\"] + cur[\"msPlayed\"];\n            return prev;\n        }, {\"totalTracks\": 0, \"count\": 0});\n        day.date = date;\n        return day;\n    });\n    const startDate = streamingData[1].date;\n    const endDate = streamingData[streamingData.length - 1].date;\n\n    const minMax = d3.extent(streamingData, function(d) { return d.count})\n    const binSize = Math.floor((minMax[1] - minMax[0]) / 7)\n    streamingData = streamingData.map(function (entry){\n        entry.color = Math.floor(entry.count / binSize) + 1\n        entry.listeningHours = msToTime(entry.count)\n        return entry;\n    })\n\n    return(\n        <>\n            <CalendarHeatmap\n                values={streamingData}\n                classForValue={(value) => {\n                    if (!value) {\n                        return \"color-empty\";\n                    }\n                    return `color-scale-${value.color}`;\n                }}\n                onClick={(value) => {\n                    if (value) {\n                        console.log(`Clicked on value with count: ${value.count}, ${value.color}`)\n                    }\n                }}\n                startDate={startDate}\n                endDate={endDate}\n                showWeekdayLabels={true}\n                tooltipDataAttrs={value => {\n                    return {\n                        'data-tip': `Listened for ${msToTime(value.count)} on ${value.date}`,\n                    };\n                }}\n            />\n            <ReactTooltip></ReactTooltip>\n        </>\n\n\n    )\n\n}\nexport default ReactCalendarHeatmap;"]},"metadata":{},"sourceType":"module"}