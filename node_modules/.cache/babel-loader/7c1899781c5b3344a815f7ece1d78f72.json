{"ast":null,"code":"var _jsxFileName = \"/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/D3CalendarHeatmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { groupBy, msToTime } from \"./helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst D3CalendarHeatmap = () => {\n  _s();\n\n  const calendarHeatmap = useRef();\n\n  const data = require(\"./data/StreamingHistoryJ.json\");\n\n  const rawData = data.map(function (elem) {\n    let entry = {};\n    entry.date = elem.endTime.split(\" \")[0];\n    entry.msPlayed = elem.msPlayed;\n    return entry;\n  });\n  let filteredData = Object.values(groupBy(rawData, \"date\"));\n  let streamingData = filteredData.map(function (day) {\n    let date = day[0][\"date\"];\n    day = day.reduce(function (prev, cur) {\n      prev[\"totalTracks\"] = prev[\"totalTracks\"] + 1;\n      prev[\"count\"] = prev[\"count\"] + cur[\"msPlayed\"];\n      return prev;\n    }, {\n      \"totalTracks\": 0,\n      \"count\": 0\n    });\n    day.date = date;\n    return day;\n  });\n  const startDate = streamingData[1].date;\n  const endDate = streamingData[streamingData.length - 1].date;\n  const minMax = d3.extent(streamingData, function (d) {\n    return d.count;\n  });\n  const binSize = Math.floor((minMax[1] - minMax[0]) / 7);\n  streamingData = streamingData.map(function (entry) {\n    entry.color = Math.floor(entry.count / binSize) + 1;\n    entry.listeningHours = msToTime(entry.count);\n    return entry;\n  }); // console.log(streamingData)\n\n  const weeksInMonth = function (month) {\n    let m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m, 1)).length;\n  };\n\n  const minDate = new Date(streamingData[2].date);\n  const maxDate = new Date(streamingData[streamingData.length - 4].date);\n  useEffect(() => {\n    var weeksInMonth = function (month) {\n      var m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m, 1)).length;\n    };\n\n    var cellMargin = 2,\n        cellSize = 20;\n    var day = d3.timeFormat(\"%w\"),\n        week = d3.timeFormat(\"%U\"),\n        format = d3.timeFormat(\"%Y-%m-%d\"),\n        titleFormat = d3.utcFormat(\"%a, %d-%b\"),\n        monthName = d3.timeFormat(\"%B\"),\n        months = d3.timeMonth.range(d3.timeMonth.floor(minDate), maxDate);\n    var svg = d3.select(calendarHeatmap.current).selectAll(\"svg\").data(months).enter().append(\"svg\").attr(\"class\", \"month\").attr(\"height\", cellSize * 7 + cellMargin * 8 + 20) // the 20 is for the month labels\n    .attr(\"width\", function (d) {\n      var columns = weeksInMonth(d);\n      return cellSize * columns + cellMargin * (columns + 1);\n    }).append(\"g\");\n    svg.append(\"text\").attr(\"class\", \"month-name\").attr(\"y\", cellSize * 7 + cellMargin * 8 + 15).attr(\"x\", function (d) {\n      var columns = weeksInMonth(d);\n      return (cellSize * columns + cellMargin * (columns + 1)) / 2;\n    }).attr(\"text-anchor\", \"middle\").text(function (d) {\n      return monthName(d);\n    });\n    var rect = svg.selectAll(\"rect.day\").data(function (d, i) {\n      return d3.timeDays(d, new Date(d.getFullYear(), d.getMonth() + 1, 1));\n    }).enter().append(\"rect\").attr(\"class\", \"day\").attr(\"width\", cellSize).attr(\"height\", cellSize).attr(\"rx\", 3).attr(\"ry\", 3) // rounded corners\n    .attr(\"fill\", '#eaeaea') // default light grey fill\n    .attr(\"y\", function (d) {\n      return day(d) * cellSize + day(d) * cellMargin + cellMargin;\n    }).attr(\"x\", function (d) {\n      return (week(d) - week(new Date(d.getFullYear(), d.getMonth(), 1))) * cellSize + (week(d) - week(new Date(d.getFullYear(), d.getMonth(), 1))) * cellMargin + cellMargin;\n    }).on(\"mouseover\", function (d) {\n      d3.select(this).classed('hover', true);\n    }).on(\"mouseout\", function (d) {\n      d3.select(this).classed('hover', false);\n    }).datum(format);\n    rect.append(\"title\").text(function (d) {\n      return titleFormat(new Date(d));\n    });\n    var sg = streamingData.map(function (entry) {\n      return [entry.date, entry.count];\n    });\n    var lookup = new Map(sg);\n    console.log(lookup.get(\"2020-13-08\"));\n    var scale = d3.scaleBand().domain(d3.extent(streamingData, function (d) {\n      return parseInt(d.count);\n    })).range([0.1, 1]); // the interpolate used for color expects a number in the range [0,1] but i don't want the lightest part of the color scheme\n\n    rect.style(\"fill\", function (d) {\n      let color = function (d) {\n        if (lookup.get(d)) return scale(lookup.get(d));else return scale(0);\n      };\n\n      return d3.interpolateBlues(color(d));\n    }).select(\"title\").text(function (d) {\n      return titleFormat(new Date(d)) + \":  \" + lookup.get(d);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calendar\",\n    ref: calendarHeatmap\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(D3CalendarHeatmap, \"64vmZQprpTy/QrL+Yw3pvCrsplY=\");\n\n_c = D3CalendarHeatmap;\nexport default D3CalendarHeatmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"D3CalendarHeatmap\");","map":{"version":3,"sources":["/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/D3CalendarHeatmap.js"],"names":["React","useEffect","useRef","d3","groupBy","msToTime","D3CalendarHeatmap","calendarHeatmap","data","require","rawData","map","elem","entry","date","endTime","split","msPlayed","filteredData","Object","values","streamingData","day","reduce","prev","cur","startDate","endDate","length","minMax","extent","d","count","binSize","Math","floor","color","listeningHours","weeksInMonth","month","m","timeMonth","timeWeeks","timeWeek","offset","minDate","Date","maxDate","cellMargin","cellSize","timeFormat","week","format","titleFormat","utcFormat","monthName","months","range","svg","select","current","selectAll","enter","append","attr","columns","text","rect","i","timeDays","getFullYear","getMonth","on","classed","datum","sg","lookup","Map","console","log","get","scale","scaleBand","domain","parseInt","style","interpolateBlues"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from \"react\";\nimport * as d3 from \"d3\";\nimport {groupBy, msToTime} from \"./helpers\";\n\nconst D3CalendarHeatmap = () => {\n    const calendarHeatmap = useRef();\n    const data = require(\"./data/StreamingHistoryJ.json\");\n    const rawData = data.map(function (elem) {\n        let entry = {}\n        entry.date = elem.endTime.split(\" \")[0];\n        entry.msPlayed = elem.msPlayed;\n        return entry;\n    });\n\n\n    let filteredData = Object.values(groupBy(rawData, \"date\"));\n\n    let streamingData = filteredData.map(function (day) {\n        let date = day[0][\"date\"];\n        day = day.reduce(function (prev, cur) {\n            prev[\"totalTracks\"] = prev[\"totalTracks\"] + 1;\n            prev[\"count\"] = prev[\"count\"] + cur[\"msPlayed\"];\n            return prev;\n        }, {\"totalTracks\": 0, \"count\": 0});\n        day.date = date;\n        return day;\n    });\n    const startDate = streamingData[1].date;\n    const endDate = streamingData[streamingData.length - 1].date;\n\n    const minMax = d3.extent(streamingData, function(d) { return d.count})\n    const binSize = Math.floor((minMax[1] - minMax[0]) / 7)\n    streamingData = streamingData.map(function (entry){\n        entry.color = Math.floor(entry.count / binSize) + 1\n        entry.listeningHours = msToTime(entry.count)\n        return entry;\n    })\n    // console.log(streamingData)\n\n    const weeksInMonth = function(month){\n        let m = d3.timeMonth.floor(month)\n        return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    }\n\n    const minDate = new Date(streamingData[2].date)\n    const maxDate = new Date(streamingData[streamingData.length - 4].date)\n\n    useEffect(() => {\n        var weeksInMonth = function(month){\n            var m = d3.timeMonth.floor(month)\n            return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n        }\n\n\n        var cellMargin = 2,\n            cellSize = 20;\n\n        var day = d3.timeFormat(\"%w\"),\n            week = d3.timeFormat(\"%U\"),\n            format = d3.timeFormat(\"%Y-%m-%d\"),\n            titleFormat = d3.utcFormat(\"%a, %d-%b\"),\n            monthName = d3.timeFormat(\"%B\"),\n            months= d3.timeMonth.range(d3.timeMonth.floor(minDate), maxDate);\n\n        var svg = d3.select(calendarHeatmap.current).selectAll(\"svg\")\n            .data(months)\n            .enter().append(\"svg\")\n            .attr(\"class\", \"month\")\n            .attr(\"height\", ((cellSize * 7) + (cellMargin * 8) + 20) ) // the 20 is for the month labels\n            .attr(\"width\", function(d) {\n                var columns = weeksInMonth(d);\n                return ((cellSize * columns) + (cellMargin * (columns + 1)));\n            })\n            .append(\"g\")\n\n        svg.append(\"text\")\n            .attr(\"class\", \"month-name\")\n            .attr(\"y\", (cellSize * 7) + (cellMargin * 8) + 15 )\n            .attr(\"x\", function(d) {\n                var columns = weeksInMonth(d);\n                return (((cellSize * columns) + (cellMargin * (columns + 1))) / 2);\n            })\n            .attr(\"text-anchor\", \"middle\")\n            .text(function(d) { return monthName(d); })\n\n        var rect = svg.selectAll(\"rect.day\")\n            .data(function(d, i) { return d3.timeDays(d, new Date(d.getFullYear(), d.getMonth()+1, 1)); })\n            .enter().append(\"rect\")\n            .attr(\"class\", \"day\")\n            .attr(\"width\", cellSize)\n            .attr(\"height\", cellSize)\n            .attr(\"rx\", 3).attr(\"ry\", 3) // rounded corners\n            .attr(\"fill\", '#eaeaea') // default light grey fill\n            .attr(\"y\", function(d) { return (day(d) * cellSize) + (day(d) * cellMargin) + cellMargin; })\n            .attr(\"x\", function(d) { return ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin ; })\n            .on(\"mouseover\", function(d) {\n                d3.select(this).classed('hover', true);\n            })\n            .on(\"mouseout\", function(d) {\n                d3.select(this).classed('hover', false);\n            })\n            .datum(format);\n\n        rect.append(\"title\")\n            .text(function(d) { return titleFormat(new Date(d)); });\n\n        var sg = streamingData.map(function (entry){\n            return [entry.date, entry.count]\n        })\n\n        var lookup = new Map(sg);\n        console.log(lookup.get(\"2020-13-08\"))\n\n        var scale = d3.scaleBand()\n            .domain(d3.extent(streamingData, function(d) { return parseInt(d.count); }))\n            .range([0.1, 1]); // the interpolate used for color expects a number in the range [0,1] but i don't want the lightest part of the color scheme\n\n        rect.style(\"fill\", function(d) {\n                let color = function(d) {\n                    if (lookup.get(d))\n                        return scale(lookup.get(d));\n                    else\n                        return scale(0)\n                }\n                return d3.interpolateBlues(color(d));\n            })\n            .select(\"title\")\n            .text(function(d) { return titleFormat(new Date(d)) + \":  \" + lookup.get(d); });\n\n    })\n\n\n    return(\n        <div id=\"calendar\" ref={calendarHeatmap}>\n        </div>\n    )\n\n}\n\nexport default D3CalendarHeatmap;"]},"metadata":{},"sourceType":"module"}