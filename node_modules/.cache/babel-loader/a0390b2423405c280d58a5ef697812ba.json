{"ast":null,"code":"var _jsxFileName = \"/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/PlainCalendarHeatmap.js\";\nimport React from \"react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport 'react-calendar-heatmap/dist/styles.css';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction groupBy(rawData, key) {\n  return rawData.reduce(function (previousVal, currentVal) {\n    (previousVal[currentVal[key]] = previousVal[currentVal[key]] || []).push(currentVal);\n    return previousVal;\n  }, {});\n}\n\n;\n\nfunction msToTime(duration) {\n  let milliseconds = Math.floor(duration % 1000 / 100),\n      seconds = Math.floor(duration / 1000 % 60),\n      minutes = Math.floor(duration / (1000 * 60) % 60),\n      hours = Math.floor(duration / (1000 * 60 * 60) % 24);\n  hours = hours < 10 ? \"0\" + hours : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n  return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\n}\n\nconst PlainCalendarHeatmap = () => {\n  const data = require(\"./data/StreamingHistoryDesi.json\");\n\n  const rawData = data.map(function (elem) {\n    let entry = {};\n    entry.date = elem.endTime.split(\" \")[0];\n    entry.msPlayed = elem.msPlayed;\n    return entry;\n  });\n  const startDate = rawData[0].date;\n  const endDate = rawData[rawData.length - 1].date;\n  let filteredData = Object.values(groupBy(rawData, \"date\"));\n  let streamingData = filteredData.map(function (day) {\n    let date = day[0][\"date\"];\n    day = day.reduce(function (prev, cur) {\n      prev[\"totalTracks\"] = prev[\"totalTracks\"] + 1;\n      prev[\"count\"] = prev[\"count\"] + cur[\"msPlayed\"];\n      return prev;\n    }, {\n      \"totalTracks\": 0,\n      \"count\": 0,\n      \"details\": [],\n      \"summary\": [{\n        \"name\": \"test\"\n      }]\n    });\n    day.date = date;\n    return day;\n  });\n  const minMax = d3.extent(streamingData, function (d) {\n    return d.count;\n  });\n  const binSize = Math.floor((minMax[1] - minMax[0]) / 7);\n  streamingData = streamingData.map(function (entry) {\n    entry.color = Math.floor(entry.count / binSize) + 1;\n    entry.listeningHours = msToTime(entry.count);\n    return entry;\n  });\n  return /*#__PURE__*/_jsxDEV(CalendarHeatmap, {\n    values: streamingData,\n    classForValue: value => {\n      if (!value) {\n        return \"color-empty\";\n      }\n\n      return `color-scale-${value.color}`;\n    },\n    onClick: value => {\n      if (value) {\n        console.log(`Clicked on value with count: ${value.count}, ${value.color}`);\n      }\n    },\n    startDate: startDate,\n    endDate: endDate,\n    showWeekdayLabels: true,\n    tooltipDataAttrs: value => {\n      return {\n        \"data-tip\": `${value.date} has count: ${value.count}`\n      };\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PlainCalendarHeatmap;\nexport default PlainCalendarHeatmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlainCalendarHeatmap\");","map":{"version":3,"sources":["/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/PlainCalendarHeatmap.js"],"names":["React","CalendarHeatmap","d3","groupBy","rawData","key","reduce","previousVal","currentVal","push","msToTime","duration","milliseconds","Math","floor","seconds","minutes","hours","PlainCalendarHeatmap","data","require","map","elem","entry","date","endTime","split","msPlayed","startDate","endDate","length","filteredData","Object","values","streamingData","day","prev","cur","minMax","extent","d","count","binSize","color","listeningHours","value","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport 'react-calendar-heatmap/dist/styles.css';\nimport * as d3 from 'd3';\n\nfunction groupBy(rawData, key) {\n    return rawData.reduce(function(previousVal, currentVal) {\n        (previousVal[currentVal[key]] = previousVal[currentVal[key]] || []).push(currentVal);\n        return previousVal;\n    }, {});\n};\n\nfunction msToTime(duration) {\n    let milliseconds = Math.floor((duration % 1000) / 100),\n        seconds = Math.floor((duration / 1000) % 60),\n        minutes = Math.floor((duration / (1000 * 60)) % 60),\n        hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n    hours = (hours < 10) ? \"0\" + hours : hours;\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n    return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\n}\n\nconst PlainCalendarHeatmap = () => {\n    const data = require(\"./data/StreamingHistoryDesi.json\");\n    const rawData = data.map(function (elem) {\n        let entry = {}\n        entry.date = elem.endTime.split(\" \")[0];\n        entry.msPlayed = elem.msPlayed;\n        return entry;\n    });\n\n    const startDate = rawData[0].date;\n    const endDate = rawData[rawData.length - 1].date;\n\n    let filteredData = Object.values(groupBy(rawData, \"date\"));\n\n    let streamingData = filteredData.map(function (day) {\n        let date = day[0][\"date\"];\n        day = day.reduce(function (prev, cur) {\n            prev[\"totalTracks\"] = prev[\"totalTracks\"] + 1;\n            prev[\"count\"] = prev[\"count\"] + cur[\"msPlayed\"];\n            return prev;\n        }, {\"totalTracks\": 0, \"count\": 0, \"details\": [], \"summary\": [{\"name\": \"test\"}]});\n        day.date = date;\n        return day;\n    });\n\n    const minMax = d3.extent(streamingData, function(d) { return d.count})\n    const binSize = Math.floor((minMax[1] - minMax[0]) / 7)\n    streamingData = streamingData.map(function (entry){\n        entry.color = Math.floor(entry.count / binSize) + 1\n        entry.listeningHours = msToTime(entry.count)\n        return entry;\n    })\n\n    return(\n        <CalendarHeatmap\n            values={streamingData}\n            classForValue={(value) => {\n                 if (!value) {\n                     return \"color-empty\";\n                 }\n                 return `color-scale-${value.color}`;\n            }}\n            onClick={(value) => {\n                 if (value) {\n                     console.log(`Clicked on value with count: ${value.count}, ${value.color}`)\n                 }\n            }}\n            startDate={startDate}\n            endDate={endDate}\n            showWeekdayLabels={true}\n            tooltipDataAttrs={(value)=>{\n                return {\n                    \"data-tip\": `${value.date} has count: ${\n                        value.count}`\n                }\n            }}\n        >\n        </CalendarHeatmap>\n    )\n\n}\nexport default PlainCalendarHeatmap;"]},"metadata":{},"sourceType":"module"}