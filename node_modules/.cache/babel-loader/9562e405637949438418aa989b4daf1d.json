{"ast":null,"code":"var _jsxFileName = \"/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/BarChart.js\";\nimport React from \"react\";\nimport * as d3 from 'd3';\nimport data from \"./data/StreamingHistoryJ.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction groupBy(rawData, key) {\n  return rawData.reduce(function (previousVal, currentVal) {\n    (previousVal[currentVal[key]] = previousVal[currentVal[key]] || []).push(currentVal);\n    return previousVal;\n  }, {});\n}\n\n;\n\nconst BarChart = () => {\n  const data = require(\"./data/StreamingHistoryJ.json\");\n\n  const rawData = data.map(function (elem) {\n    let entry = {};\n    entry.date = elem.endTime.split(\" \")[0];\n    entry.msPlayed = elem.msPlayed;\n    entry.artistName = elem.artistName;\n    return entry;\n  });\n  let filteredData = Object.values(groupBy(rawData, \"date\"));\n  let streamingData = filteredData.map(function (day) {\n    let date = day[0][\"date\"];\n    day = day.reduce(function (prev, cur) {\n      prev[\"msPlayed\"] = prev[\"msPlayed\"] + cur[\"msPlayed\"];\n      prev[\"artists\"][cur[\"artistName\"]] = (prev[\"artists\"][cur[\"artistName\"]] || 0) + cur[\"msPlayed\"];\n      return prev;\n    }, {\n      \"msPlayed\": 0,\n      \"artists\": {}\n    });\n    day.date = date;\n    return day;\n  });\n  const top20Artists = streamingData.reduce();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/BarChart.js"],"names":["React","d3","data","groupBy","rawData","key","reduce","previousVal","currentVal","push","BarChart","require","map","elem","entry","date","endTime","split","msPlayed","artistName","filteredData","Object","values","streamingData","day","prev","cur","top20Artists"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;;AAEA,SAASC,OAAT,CAAiBC,OAAjB,EAA0BC,GAA1B,EAA+B;AAC3B,SAAOD,OAAO,CAACE,MAAR,CAAe,UAASC,WAAT,EAAsBC,UAAtB,EAAkC;AACpD,KAACD,WAAW,CAACC,UAAU,CAACH,GAAD,CAAX,CAAX,GAA+BE,WAAW,CAACC,UAAU,CAACH,GAAD,CAAX,CAAX,IAAgC,EAAhE,EAAoEI,IAApE,CAAyED,UAAzE;AACA,WAAOD,WAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAIH;;AAAA;;AAED,MAAMG,QAAQ,GAAG,MAAM;AACnB,QAAMR,IAAI,GAAGS,OAAO,CAAC,+BAAD,CAApB;;AACA,QAAMP,OAAO,GAAGF,IAAI,CAACU,GAAL,CAAS,UAAUC,IAAV,EAAgB;AACrC,QAAIC,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,CAACC,IAAN,GAAaF,IAAI,CAACG,OAAL,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAb;AACAH,IAAAA,KAAK,CAACI,QAAN,GAAiBL,IAAI,CAACK,QAAtB;AACAJ,IAAAA,KAAK,CAACK,UAAN,GAAmBN,IAAI,CAACM,UAAxB;AACA,WAAOL,KAAP;AACH,GANe,CAAhB;AASA,MAAIM,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcnB,OAAO,CAACC,OAAD,EAAU,MAAV,CAArB,CAAnB;AAEA,MAAImB,aAAa,GAAGH,YAAY,CAACR,GAAb,CAAiB,UAAUY,GAAV,EAAe;AAChD,QAAIT,IAAI,GAAGS,GAAG,CAAC,CAAD,CAAH,CAAO,MAAP,CAAX;AACAA,IAAAA,GAAG,GAAGA,GAAG,CAAClB,MAAJ,CAAW,UAAUmB,IAAV,EAAgBC,GAAhB,EAAqB;AAClCD,MAAAA,IAAI,CAAC,UAAD,CAAJ,GAAmBA,IAAI,CAAC,UAAD,CAAJ,GAAmBC,GAAG,CAAC,UAAD,CAAzC;AACAD,MAAAA,IAAI,CAAC,SAAD,CAAJ,CAAgBC,GAAG,CAAC,YAAD,CAAnB,IAAqC,CAACD,IAAI,CAAC,SAAD,CAAJ,CAAgBC,GAAG,CAAC,YAAD,CAAnB,KAAsC,CAAvC,IAA4CA,GAAG,CAAC,UAAD,CAApF;AACA,aAAOD,IAAP;AACH,KAJK,EAIH;AAAC,kBAAY,CAAb;AAAgB,iBAAW;AAA3B,KAJG,CAAN;AAKAD,IAAAA,GAAG,CAACT,IAAJ,GAAWA,IAAX;AACA,WAAOS,GAAP;AACH,GATmB,CAApB;AAWA,QAAMG,YAAY,GAAGJ,aAAa,CAACjB,MAAd,EAArB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA7BD;;KAAMI,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport * as d3 from 'd3';\nimport data from \"./data/StreamingHistoryJ.json\";\n\nfunction groupBy(rawData, key) {\n    return rawData.reduce(function(previousVal, currentVal) {\n        (previousVal[currentVal[key]] = previousVal[currentVal[key]] || []).push(currentVal);\n        return previousVal;\n    }, {});\n};\n\nconst BarChart = () => {\n    const data = require(\"./data/StreamingHistoryJ.json\");\n    const rawData = data.map(function (elem) {\n        let entry = {}\n        entry.date = elem.endTime.split(\" \")[0];\n        entry.msPlayed = elem.msPlayed;\n        entry.artistName = elem.artistName;\n        return entry;\n    });\n\n\n    let filteredData = Object.values(groupBy(rawData, \"date\"));\n\n    let streamingData = filteredData.map(function (day) {\n        let date = day[0][\"date\"];\n        day = day.reduce(function (prev, cur) {\n            prev[\"msPlayed\"] = prev[\"msPlayed\"] + cur[\"msPlayed\"];\n            prev[\"artists\"][cur[\"artistName\"]] = (prev[\"artists\"][cur[\"artistName\"]] || 0) + cur[\"msPlayed\"];\n            return prev;\n        }, {\"msPlayed\": 0, \"artists\": {}});\n        day.date = date;\n        return day;\n    });\n\n    const top20Artists = streamingData.reduce()\n\n    return (\n        <div></div>\n    );\n}\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}