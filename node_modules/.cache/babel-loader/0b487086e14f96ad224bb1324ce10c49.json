{"ast":null,"code":"var _jsxFileName = \"/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/D3CalendarHeatmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { groupBy, msToTime } from \"./helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst D3CalendarHeatmap = () => {\n  _s();\n\n  const calendarHeatmap = useRef();\n\n  const data = require(\"./data/StreamingHistoryJ.json\");\n\n  const rawData = data.map(function (elem) {\n    let entry = {};\n    entry.date = elem.endTime.split(\" \")[0];\n    entry.msPlayed = elem.msPlayed;\n    return entry;\n  });\n  let filteredData = Object.values(groupBy(rawData, \"date\"));\n  let streamingData = filteredData.map(function (day) {\n    let date = day[0][\"date\"];\n    day = day.reduce(function (prev, cur) {\n      prev[\"totalTracks\"] = prev[\"totalTracks\"] + 1;\n      prev[\"count\"] = prev[\"count\"] + cur[\"msPlayed\"];\n      return prev;\n    }, {\n      \"totalTracks\": 0,\n      \"count\": 0\n    });\n    day.date = date;\n    return day;\n  });\n  const startDate = streamingData[1].date;\n  const endDate = streamingData[streamingData.length - 1].date;\n  const minMax = d3.extent(streamingData, function (d) {\n    return d.count;\n  });\n  const binSize = Math.floor((minMax[1] - minMax[0]) / 7);\n  streamingData = streamingData.map(function (entry) {\n    entry.color = Math.floor(entry.count / binSize) + 1;\n    entry.listeningHours = msToTime(entry.count);\n    return entry;\n  });\n  console.log(streamingData);\n\n  const weeksInMonth = function (month) {\n    let m = d3.timeMonth.floor(month);\n    return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m, 1)).length;\n  };\n\n  const minDate = d3.min(new Date(streamingData[0].date));\n  const maxDate = d3.max(new Date(streamingData[streamingData.length - 1].date));\n  useEffect(() => {\n    var weeksInMonth = function (month) {\n      var m = d3.timeMonth.floor(month);\n      return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m, 1)).length;\n    }; // var minDate = d3.min(dateData, function(d) { return new Date(d.day) })\n    // var maxDate = d3.max(dateData, function(d) { return new Date(d.day) })\n\n\n    var cellMargin = 2,\n        cellSize = 20;\n    var day = d3.timeFormat(\"%w\"),\n        week = d3.timeFormat(\"%U\"),\n        format = d3.timeFormat(\"%Y-%m-%d\"),\n        titleFormat = d3.utcFormat(\"%a, %d-%b\"),\n        monthName = d3.timeFormat(\"%B\"),\n        months = d3.timeMonth.range(d3.timeMonth.floor(minDate), maxDate);\n    var svg = d3.select(calendarHeatmap.current).selectAll(\"svg\").data(months).enter().append(\"svg\").attr(\"class\", \"month\").attr(\"height\", cellSize * 7 + cellMargin * 8 + 20) // the 20 is for the month labels\n    .attr(\"width\", function (d) {\n      var columns = weeksInMonth(d);\n      return cellSize * columns + cellMargin * (columns + 1);\n    }).append(\"g\"); //\n    // svg.append(\"text\")\n    //     .attr(\"class\", \"month-name\")\n    //     .attr(\"y\", (cellSize * 7) + (cellMargin * 8) + 15 )\n    //     .attr(\"x\", function(d) {\n    //         var columns = weeksInMonth(d);\n    //         return (((cellSize * columns) + (cellMargin * (columns + 1))) / 2);\n    //     })\n    //     .attr(\"text-anchor\", \"middle\")\n    //     .text(function(d) { return monthName(d); })\n    //\n    // var rect = svg.selectAll(\"rect.day\")\n    //     .data(function(d, i) { return d3.timeDays(d, new Date(d.getFullYear(), d.getMonth()+1, 1)); })\n    //     .enter().append(\"rect\")\n    //     .attr(\"class\", \"day\")\n    //     .attr(\"width\", cellSize)\n    //     .attr(\"height\", cellSize)\n    //     .attr(\"rx\", 3).attr(\"ry\", 3) // rounded corners\n    //     .attr(\"fill\", '#eaeaea') // default light grey fill\n    //     .attr(\"y\", function(d) { return (day(d) * cellSize) + (day(d) * cellMargin) + cellMargin; })\n    //     .attr(\"x\", function(d) { return ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin ; })\n    //     .on(\"mouseover\", function(d) {\n    //         d3.select(this).classed('hover', true);\n    //     })\n    //     .on(\"mouseout\", function(d) {\n    //         d3.select(this).classed('hover', false);\n    //     })\n    //     .datum(format);\n    //\n    // rect.append(\"title\")\n    //     .text(function(d) { return titleFormat(new Date(d)); });\n    //\n    // var lookup = d3.nest()\n    //     .key(function(d) { return d.day; })\n    //     .rollup(function(leaves) {\n    //         return d3.sum(leaves, function(d){ return parseInt(d.count); });\n    //     })\n    //     .object(streamingData);\n    //\n    // var scale = d3.scaleLinear()\n    //     .domain(d3.extent(streamingData, function(d) { return parseInt(d.count); }))\n    //     .range([0.4,1]); // the interpolate used for color expects a number in the range [0,1] but i don't want the lightest part of the color scheme\n    //\n    // rect.filter(function(d) { return d in lookup; })\n    //     .style(\"fill\", function(d) { return d3.interpolatePuBu(scale(lookup[d])); })\n    //     .select(\"title\")\n    //     .text(function(d) { return titleFormat(new Date(d)) + \":  \" + lookup[d]; });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calendar\",\n    ref: calendarHeatmap,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(D3CalendarHeatmap, \"64vmZQprpTy/QrL+Yw3pvCrsplY=\");\n\n_c = D3CalendarHeatmap;\nexport default D3CalendarHeatmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"D3CalendarHeatmap\");","map":{"version":3,"sources":["/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/D3CalendarHeatmap.js"],"names":["React","useEffect","useRef","d3","groupBy","msToTime","D3CalendarHeatmap","calendarHeatmap","data","require","rawData","map","elem","entry","date","endTime","split","msPlayed","filteredData","Object","values","streamingData","day","reduce","prev","cur","startDate","endDate","length","minMax","extent","d","count","binSize","Math","floor","color","listeningHours","console","log","weeksInMonth","month","m","timeMonth","timeWeeks","timeWeek","offset","minDate","min","Date","maxDate","max","cellMargin","cellSize","timeFormat","week","format","titleFormat","utcFormat","monthName","months","range","svg","select","current","selectAll","enter","append","attr","columns"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from \"react\";\nimport * as d3 from \"d3\";\nimport {groupBy, msToTime} from \"./helpers\";\n\nconst D3CalendarHeatmap = () => {\n    const calendarHeatmap = useRef();\n    const data = require(\"./data/StreamingHistoryJ.json\");\n    const rawData = data.map(function (elem) {\n        let entry = {}\n        entry.date = elem.endTime.split(\" \")[0];\n        entry.msPlayed = elem.msPlayed;\n        return entry;\n    });\n\n\n    let filteredData = Object.values(groupBy(rawData, \"date\"));\n\n    let streamingData = filteredData.map(function (day) {\n        let date = day[0][\"date\"];\n        day = day.reduce(function (prev, cur) {\n            prev[\"totalTracks\"] = prev[\"totalTracks\"] + 1;\n            prev[\"count\"] = prev[\"count\"] + cur[\"msPlayed\"];\n            return prev;\n        }, {\"totalTracks\": 0, \"count\": 0});\n        day.date = date;\n        return day;\n    });\n    const startDate = streamingData[1].date;\n    const endDate = streamingData[streamingData.length - 1].date;\n\n    const minMax = d3.extent(streamingData, function(d) { return d.count})\n    const binSize = Math.floor((minMax[1] - minMax[0]) / 7)\n    streamingData = streamingData.map(function (entry){\n        entry.color = Math.floor(entry.count / binSize) + 1\n        entry.listeningHours = msToTime(entry.count)\n        return entry;\n    })\n    console.log(streamingData)\n\n    const weeksInMonth = function(month){\n        let m = d3.timeMonth.floor(month)\n        return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n    }\n\n    const minDate = d3.min(new Date(streamingData[0].date))\n    const maxDate = d3.max(new Date(streamingData[streamingData.length - 1].date))\n\n    useEffect(() => {\n        var weeksInMonth = function(month){\n            var m = d3.timeMonth.floor(month)\n            return d3.timeWeeks(d3.timeWeek.floor(m), d3.timeMonth.offset(m,1)).length;\n        }\n\n        // var minDate = d3.min(dateData, function(d) { return new Date(d.day) })\n        // var maxDate = d3.max(dateData, function(d) { return new Date(d.day) })\n\n        var cellMargin = 2,\n            cellSize = 20;\n\n        var day = d3.timeFormat(\"%w\"),\n            week = d3.timeFormat(\"%U\"),\n            format = d3.timeFormat(\"%Y-%m-%d\"),\n            titleFormat = d3.utcFormat(\"%a, %d-%b\"),\n            monthName = d3.timeFormat(\"%B\"),\n            months= d3.timeMonth.range(d3.timeMonth.floor(minDate), maxDate);\n\n        var svg = d3.select(calendarHeatmap.current).selectAll(\"svg\")\n            .data(months)\n            .enter().append(\"svg\")\n            .attr(\"class\", \"month\")\n            .attr(\"height\", ((cellSize * 7) + (cellMargin * 8) + 20) ) // the 20 is for the month labels\n            .attr(\"width\", function(d) {\n                var columns = weeksInMonth(d);\n                return ((cellSize * columns) + (cellMargin * (columns + 1)));\n            })\n            .append(\"g\")\n        //\n        // svg.append(\"text\")\n        //     .attr(\"class\", \"month-name\")\n        //     .attr(\"y\", (cellSize * 7) + (cellMargin * 8) + 15 )\n        //     .attr(\"x\", function(d) {\n        //         var columns = weeksInMonth(d);\n        //         return (((cellSize * columns) + (cellMargin * (columns + 1))) / 2);\n        //     })\n        //     .attr(\"text-anchor\", \"middle\")\n        //     .text(function(d) { return monthName(d); })\n        //\n        // var rect = svg.selectAll(\"rect.day\")\n        //     .data(function(d, i) { return d3.timeDays(d, new Date(d.getFullYear(), d.getMonth()+1, 1)); })\n        //     .enter().append(\"rect\")\n        //     .attr(\"class\", \"day\")\n        //     .attr(\"width\", cellSize)\n        //     .attr(\"height\", cellSize)\n        //     .attr(\"rx\", 3).attr(\"ry\", 3) // rounded corners\n        //     .attr(\"fill\", '#eaeaea') // default light grey fill\n        //     .attr(\"y\", function(d) { return (day(d) * cellSize) + (day(d) * cellMargin) + cellMargin; })\n        //     .attr(\"x\", function(d) { return ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellSize) + ((week(d) - week(new Date(d.getFullYear(),d.getMonth(),1))) * cellMargin) + cellMargin ; })\n        //     .on(\"mouseover\", function(d) {\n        //         d3.select(this).classed('hover', true);\n        //     })\n        //     .on(\"mouseout\", function(d) {\n        //         d3.select(this).classed('hover', false);\n        //     })\n        //     .datum(format);\n        //\n        // rect.append(\"title\")\n        //     .text(function(d) { return titleFormat(new Date(d)); });\n        //\n        // var lookup = d3.nest()\n        //     .key(function(d) { return d.day; })\n        //     .rollup(function(leaves) {\n        //         return d3.sum(leaves, function(d){ return parseInt(d.count); });\n        //     })\n        //     .object(streamingData);\n        //\n        // var scale = d3.scaleLinear()\n        //     .domain(d3.extent(streamingData, function(d) { return parseInt(d.count); }))\n        //     .range([0.4,1]); // the interpolate used for color expects a number in the range [0,1] but i don't want the lightest part of the color scheme\n        //\n        // rect.filter(function(d) { return d in lookup; })\n        //     .style(\"fill\", function(d) { return d3.interpolatePuBu(scale(lookup[d])); })\n        //     .select(\"title\")\n        //     .text(function(d) { return titleFormat(new Date(d)) + \":  \" + lookup[d]; });\n\n    })\n\n\n    return(\n        <div id=\"calendar\" ref={calendarHeatmap}>\n            <svg></svg>\n        </div>\n    )\n\n}\n\nexport default D3CalendarHeatmap;"]},"metadata":{},"sourceType":"module"}