{"ast":null,"code":"let index = 1;\n\nlet randomNum = () => 20 + Math.floor(80 * Math.random());\n\nfunction getInitialData() {\n  let numItems = 10;\n  let data = [];\n\n  for (let i = 0; i < numItems; i++) {\n    data = getAppendedData(data);\n  }\n\n  return data;\n}\n\nfunction getAppendedData(data) {\n  let ret = data.map(d => d);\n  ret.push({\n    id: \"id-\" + index,\n    value: randomNum(),\n    name: \"Item \" + index\n  });\n  index++;\n  return ret;\n}\n\nfunction getTruncatedData(data) {\n  let ret = data.map(d => d).slice(1);\n  return ret;\n}\n\nfunction getUpdatedData(data) {\n  let ret = data.map(d => ({\n    id: d.id,\n    value: randomNum(),\n    name: d.name\n  }));\n  return ret;\n}\n\nexport { getInitialData, getAppendedData, getTruncatedData, getUpdatedData };","map":{"version":3,"sources":["/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/react-bar-chart/helpers.js"],"names":["index","randomNum","Math","floor","random","getInitialData","numItems","data","i","getAppendedData","ret","map","d","push","id","value","name","getTruncatedData","slice","getUpdatedData"],"mappings":"AAAA,IAAIA,KAAK,GAAG,CAAZ;;AAEA,IAAIC,SAAS,GAAG,MAAM,KAAKC,IAAI,CAACC,KAAL,CAAW,KAAKD,IAAI,CAACE,MAAL,EAAhB,CAA3B;;AAEA,SAASC,cAAT,GAA0B;AACtB,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,EAA/B,EAAmC;AAC/BD,IAAAA,IAAI,GAAGE,eAAe,CAACF,IAAD,CAAtB;AACH;;AACD,SAAOA,IAAP;AACH;;AAED,SAASE,eAAT,CAAyBF,IAAzB,EAA+B;AAC3B,MAAIG,GAAG,GAAGH,IAAI,CAACI,GAAL,CAASC,CAAC,IAAIA,CAAd,CAAV;AACAF,EAAAA,GAAG,CAACG,IAAJ,CAAS;AACLC,IAAAA,EAAE,EAAE,QAAQd,KADP;AAELe,IAAAA,KAAK,EAAEd,SAAS,EAFX;AAGLe,IAAAA,IAAI,EAAE,UAAUhB;AAHX,GAAT;AAKAA,EAAAA,KAAK;AACL,SAAOU,GAAP;AACH;;AAED,SAASO,gBAAT,CAA0BV,IAA1B,EAAgC;AAC5B,MAAIG,GAAG,GAAGH,IAAI,CAACI,GAAL,CAASC,CAAC,IAAIA,CAAd,EAAiBM,KAAjB,CAAuB,CAAvB,CAAV;AACA,SAAOR,GAAP;AACH;;AAED,SAASS,cAAT,CAAwBZ,IAAxB,EAA8B;AAC1B,MAAIG,GAAG,GAAGH,IAAI,CAACI,GAAL,CAASC,CAAC,KAAK;AAAEE,IAAAA,EAAE,EAAEF,CAAC,CAACE,EAAR;AAAYC,IAAAA,KAAK,EAAEd,SAAS,EAA5B;AAAgCe,IAAAA,IAAI,EAAEJ,CAAC,CAACI;AAAxC,GAAL,CAAV,CAAV;AACA,SAAON,GAAP;AACH;;AAED,SAASL,cAAT,EAAyBI,eAAzB,EAA0CQ,gBAA1C,EAA4DE,cAA5D","sourcesContent":["let index = 1;\n\nlet randomNum = () => 20 + Math.floor(80 * Math.random());\n\nfunction getInitialData() {\n    let numItems = 10;\n    let data = [];\n    for (let i = 0; i < numItems; i++) {\n        data = getAppendedData(data);\n    }\n    return data;\n}\n\nfunction getAppendedData(data) {\n    let ret = data.map(d => d);\n    ret.push({\n        id: \"id-\" + index,\n        value: randomNum(),\n        name: \"Item \" + index\n    });\n    index++;\n    return ret;\n}\n\nfunction getTruncatedData(data) {\n    let ret = data.map(d => d).slice(1);\n    return ret;\n}\n\nfunction getUpdatedData(data) {\n    let ret = data.map(d => ({ id: d.id, value: randomNum(), name: d.name }));\n    return ret;\n}\n\nexport { getInitialData, getAppendedData, getTruncatedData, getUpdatedData };\n"]},"metadata":{},"sourceType":"module"}