{"ast":null,"code":"var _jsxFileName = \"/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/react-bar-chart/BarChart.js\";\nimport React, { Component } from \"react\";\nimport NodeGroup from \"react-move/NodeGroup\";\nimport { getInitialData, getAppendedData, getTruncatedData, getUpdatedData } from \"./helpers\";\nimport \"./barchart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet barHeight = 25;\nlet barPadding = 2;\nlet barColour = \"#348AA7\";\n\nlet widthScale = d => d * 5;\n\nfunction BarGroup(props) {\n  let width = widthScale(props.state.value);\n  let yMid = barHeight * 0.5;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"bar-group\",\n    transform: `translate(0, ${props.state.y})`,\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      y: barPadding * 0.5,\n      width: width,\n      height: barHeight - barPadding,\n      style: {\n        fill: barColour,\n        opacity: props.state.opacity\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      className: \"value-label\",\n      x: width - 6,\n      y: yMid,\n      alignmentBaseline: \"middle\",\n      children: props.state.value.toFixed(0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      className: \"name-label\",\n      x: \"-6\",\n      y: yMid,\n      alignmentBaseline: \"middle\",\n      style: {\n        opacity: props.state.opacity\n      },\n      children: props.data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_c = BarGroup;\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: getInitialData()\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  handleAdd() {\n    this.setState({\n      data: getAppendedData(this.state.data)\n    });\n  }\n\n  handleRemove() {\n    this.setState({\n      data: getTruncatedData(this.state.data)\n    });\n  }\n\n  handleUpdate() {\n    this.setState({\n      data: getUpdatedData(this.state.data)\n    });\n  }\n\n  startTransition(d, i) {\n    return {\n      value: 0,\n      y: i * barHeight,\n      opacity: 0\n    };\n  }\n\n  enterTransition(d) {\n    return {\n      value: [d.value],\n      opacity: [1],\n      timing: {\n        duration: 250\n      }\n    };\n  }\n\n  updateTransition(d, i) {\n    return {\n      value: [d.value],\n      y: [i * barHeight],\n      timing: {\n        duration: 300\n      }\n    };\n  }\n\n  leaveTransition(d) {\n    return {\n      y: [-barHeight],\n      opacity: [0],\n      timing: {\n        duration: 250\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleAdd,\n          children: \"Add item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleRemove,\n          children: \"Remove item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleUpdate,\n          children: \"Update values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"800\",\n        height: \"2200\",\n        children: /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"chart\",\n          transform: \"translate(100,10)\",\n          children: /*#__PURE__*/_jsxDEV(NodeGroup, {\n            data: this.state.data,\n            keyAccessor: d => d.name,\n            start: this.startTransition,\n            enter: this.enterTransition,\n            update: this.updateTransition,\n            leave: this.leaveTransition,\n            children: nodes => /*#__PURE__*/_jsxDEV(\"g\", {\n              children: nodes.map(_ref => {\n                let {\n                  key,\n                  data,\n                  state\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(BarGroup, {\n                  data: data,\n                  state: state\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarGroup\");","map":{"version":3,"sources":["/home/iivanova/Desktop/UBC_2021_2022/CPSC547_information_visualization/project/explorify/src/react-bar-chart/BarChart.js"],"names":["React","Component","NodeGroup","getInitialData","getAppendedData","getTruncatedData","getUpdatedData","barHeight","barPadding","barColour","widthScale","d","BarGroup","props","width","state","value","yMid","y","fill","opacity","toFixed","data","name","BarChart","constructor","handleAdd","bind","handleRemove","handleUpdate","setState","startTransition","i","enterTransition","timing","duration","updateTransition","leaveTransition","render","nodes","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NodeGroup from \"react-move/NodeGroup\";\nimport {\n    getInitialData,\n    getAppendedData,\n    getTruncatedData,\n    getUpdatedData\n} from \"./helpers\";\nimport \"./barchart.css\";\n\nlet barHeight = 25;\nlet barPadding = 2;\nlet barColour = \"#348AA7\";\nlet widthScale = d => d * 5;\n\nfunction BarGroup(props) {\n    let width = widthScale(props.state.value);\n    let yMid = barHeight * 0.5;\n\n    return (\n        <g className=\"bar-group\" transform={`translate(0, ${props.state.y})`}>\n            <rect\n                y={barPadding * 0.5}\n                width={width}\n                height={barHeight - barPadding}\n                style={{ fill: barColour, opacity: props.state.opacity }}\n            />\n            <text\n                className=\"value-label\"\n                x={width - 6}\n                y={yMid}\n                alignmentBaseline=\"middle\"\n            >\n                {props.state.value.toFixed(0)}\n            </text>\n            <text\n                className=\"name-label\"\n                x=\"-6\"\n                y={yMid}\n                alignmentBaseline=\"middle\"\n                style={{ opacity: props.state.opacity }}\n            >\n                {props.data.name}\n            </text>\n        </g>\n    );\n}\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: getInitialData()\n        };\n\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleRemove = this.handleRemove.bind(this);\n        this.handleUpdate = this.handleUpdate.bind(this);\n    }\n\n    handleAdd() {\n        this.setState({\n            data: getAppendedData(this.state.data)\n        });\n    }\n\n    handleRemove() {\n        this.setState({\n            data: getTruncatedData(this.state.data)\n        });\n    }\n\n    handleUpdate() {\n        this.setState({\n            data: getUpdatedData(this.state.data)\n        });\n    }\n\n    startTransition(d, i) {\n        return { value: 0, y: i * barHeight, opacity: 0 };\n    }\n\n    enterTransition(d) {\n        return { value: [d.value], opacity: [1], timing: { duration: 250 } };\n    }\n\n    updateTransition(d, i) {\n        return { value: [d.value], y: [i * barHeight], timing: { duration: 300 } };\n    }\n\n    leaveTransition(d) {\n        return { y: [-barHeight], opacity: [0], timing: { duration: 250 } };\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"menu\">\n                    <button onClick={this.handleAdd}>Add item</button>\n                    <button onClick={this.handleRemove}>Remove item</button>\n                    <button onClick={this.handleUpdate}>Update values</button>\n                </div>\n                <svg width=\"800\" height=\"2200\">\n                    <g className=\"chart\" transform=\"translate(100,10)\">\n                        <NodeGroup\n                            data={this.state.data}\n                            keyAccessor={d => d.name}\n                            start={this.startTransition}\n                            enter={this.enterTransition}\n                            update={this.updateTransition}\n                            leave={this.leaveTransition}\n                        >\n                            {nodes => (\n                                <g>\n                                    {nodes.map(({ key, data, state }) => (\n                                        <BarGroup key={key} data={data} state={state} />\n                                    ))}\n                                </g>\n                            )}\n                        </NodeGroup>\n                    </g>\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}